{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"File Auto-Sorter File Auto-Sorter is a smart script that automatically organizes files in your Downloads folder by sorting them into categories. How Does It Work? Simply install and run the script. It will: - Monitor your Downloads folder - Automatically identify file types by their extensions - Move files into corresponding folders: .jpg , .png \u2192 Images .pdf , .docx \u2192 Documents .mp3 , .wav \u2192 Audio ...and others Save Time. Stay Organized.","title":"MAIN"},{"location":"#file-auto-sorter","text":"File Auto-Sorter is a smart script that automatically organizes files in your Downloads folder by sorting them into categories.","title":"File Auto-Sorter"},{"location":"#how-does-it-work","text":"Simply install and run the script. It will: - Monitor your Downloads folder - Automatically identify file types by their extensions - Move files into corresponding folders: .jpg , .png \u2192 Images .pdf , .docx \u2192 Documents .mp3 , .wav \u2192 Audio ...and others Save Time. Stay Organized.","title":"How Does It Work?"},{"location":"auto_sorter_en/auto_sorter_for_beg/","text":"For who the documentation intended? This guide is intended for people who want to understand my script from scratch. The analysis will be very detailed using simple terms (key concepts will be explained NOT only in technical language). ==IMPORTANT!== If you want to read the documentation quickly and concisely, please go to the section for developers (keep in mind that terms and other definitions won't be explained in the same way as in this documentation. If you're unsure about your skills, read this documentation first). What does the script do? The script serves to sort files with different extensions into their corresponding directories. Script logic Path Initialization - Defines the source directory ( Source_dir ) and target directories for different file types Directory Creation - Checks for the existence of target folders, creates them if absent File Processing Loop - For each file in the source directory: Determines the file extension Performs classification by the following types: Images (.jpg, .jpeg, .png, .gif, .bmp) Video (.mp4, .avi, .mkv, .wmv, .flv) Documents (.pdf, .doc, .docx, .txt, .rtf, .xls, .xlsx, .ppt, .pptx) Audio (.mp3, .wav, .aac, .ogg) Archives (.zip, .rar, .tar) ==Files are moved to corresponding target directories== Completion - Displays a message about successful sorting completion System compatibility Script intended for next systems: Linux MacOS It\u2019s worth to say, code will differ between the systems only in paths. First, let\u2019s start to analysis with Linux and second with MacOS Code for Linux systems: #!/bin/bash Source_dir=\"/home/username/Downloads\" # SET YOUR NICKNAME INSTEAD OF `username`!!! Result_picture=\"/home/username/picture\" # SET YOUR NICKNAME INSTEAD OF `username`!!! Result_video=\"/home/username/video\" # SET YOUR NICKNAME INSTEAD OF `username`!!! Result_music=\"/home/username/music\" # SET YOUR NICKNAME INSTEAD OF `username`!!! Result_documents=\"/home/username/documents\" # SET YOUR NICKNAME INSTEAD OF `username`!!! Result_archives=\"/home/username/archives\" # SET YOUR NICKNAME INSTEAD OF `username`!!! echo \"Creating directories\" mkdir -p \"$Result_picture\" \"$Result_video\" \"$Result_documents\" \"$Result_music\" \"$Result_archives\" sleep 1 for file in \"$Source_dir\"/*; do if [ -f \"$file\" ]; then filename=$(basename \"$file\") case \"$filename\" in *.jpg|*.jpeg|*.png|*.gif|*.bmp) echo \"Moving $filename to picture directory\" mv \"$file\" \"$Result_picture\" ;; *.mp4|*.avi|*.mkv|*.wmv|*.flv) echo \"Moving $filename to video directory\" mv \"$file\" \"$Result_video\" ;; *.pdf|*.doc|*.docx|*.txt|*.rtf|*.xls|*.xlsx|*.ppt|*.pptx) echo \"Moving $filename to document directory\" mv \"$file\" \"$Result_documents\" ;; *.mp3|*.wav|*.aac|*.ogg) echo \"Moving $filename to music directory\" mv \"$file\" \"$Result_music\" ;; *.zip|*.rar|*.tar) echo \"Moving $filename to archive directory\" mv \"$file\" \"$Result_archives\" ;; *) echo \"Something went wrong...\" esac fi done echo \"File sorting was successfully completed.\" Line-by-line analysis Shebang - what is it? shebang is the definition of the interpreter for executing the script. Roughly speaking, we tell the system that the interpreter will read the Bash script. #!/bin/bash Variables logic We initialize the target variable Source_dir and declare it as the path to the Downloads directory. Source_dir=\"/home/username/Downloads\" We'll take files from this variable and save them in the following directories: The picture target directory for the Result_picture variable. The video target directory for the Result_video variable. The music target directory for the Result_music variable. The documents target directory for the Result_documents variables. The archives target directory for the Result_archives variables. You might be wondering what happens if the user doesn't have these directories on their system. Will they have to create them themselves before using the script? The script, not the user, will create the target directories using the following command: mkdir -p \"$Result_picture\" \"$Result_video\" \"$Result_documents\" \"$Result_music\" \"$Result_archives\" The mkdir keyword in Bash (Bourne Again SHell) is a command that creates directories on the system. It's followed by the -p parameter, which creates the \"missing\" directory chain. I'd also like to mention two commands (echo, sleep). 1) The echo command outputs a specific text to the terminal (in our case, it's \"Creating directories\"). 2) The sleep command pauses (stops execution) for a specified (fixed) time, in our case, 1. After this time, the program resumes execution. This is simply to add some realism to the system's operation. Cycle and condition for file in \"$Source_dir\"/*; do if [ -f \"$file\" ]; then filename=$(basename \"$file\") Here we use a Cycle, in programming there are several types of them, for example, the while cycle, or as in our case for, they serve as duplication of certain actions, for example, in our case we force the for cycle to \"iterate\" through the files in the specified directory. We'll create a file loop that will check all the contents ( * ) of the target Downloads directory. Keep in mind that the downloads directory may contain directories as well as files, but we only want files sorted into their assigned directories. We'll check: if [ -f \"$file\" ]; then filename=$(basename \"$file\") This code fragment contains an 'if then' condition. Bash has several types of these, just like loops, but we'll only touch on this one. A condition in programming is a test of a condition that can either be true (in Bash, true is denoted by 0) or false (in Bash, false is denoted by 1). We check with the -f parameter whether the iteration is a file, if so, then we create a filename variable, which stores the following: $(basename \"$file\") The basename keyword is a command that extracts a filename (including its extension). For example, if the loop finds the file testfile.png in the target Downloads directory, then filename will have the value testfile.png accordingly. case construction case (or its equivalent in other programming languages, switch case ) is a Bash construct that simplifies code reading, makes it more concise, and allows for multiple conditions to be contained within a single block. Simply put, case is the same as an if then -type condition, only more suitable for large numbers of conditions (as in our case, for example). It looks like this: case \"$filename\" in *.jpg|*.jpeg|*.png|*.gif|*.bmp) echo \"Moving $filename to picture directory\" mv \"$file\" \"$Result_picture\" ;; *.mp4|*.avi|*.mkv|*.wmv|*.flv) echo \"Moving $filename to video directory\" mv \"$file\" \"$Result_video\" ;; *.pdf|*.doc|*.docx|*.txt|*.rtf|*.xls|*.xlsx|*.ppt|*.pptx) echo \"Moving $filename to document directory\" mv \"$file\" \"$Result_documents\" ;; *.mp3|*.wav|*.aac|*.ogg) echo \"Moving $filename to music directory\" mv \"$file\" \"$Result_music\" ;; *.zip|*.rar|*.tar) echo \"Moving $filename to archive directory\" mv \"$file\" \"$Result_archives\" ;; *) echo \"Something went wrong...\" esac At the very top of the code, we set a certain condition: \"If filename contains any of the file extensions listed below in its name, then redirect it to the corresponding target directory.\" It's worth noting that in Bash, the * symbol represents any name (for example, in our case - any filename). The | symbol means OR , meaning the condition allows us to check not just one extension, but multiple ones at once. The ;; symbol indicates the end of one condition. The *) symbol is a keyword used to specify a default case for the case construct (typically used to handle errors, for instance, when none of the file extensions match those we specified in the conditions). esac - the keyword used to indicate the end of the entire case conditional block. fi - marks the end of the if condition (the one that was above the case statement). done - indicates the end of the loop (located above the if then condition). The final echo tells us that everything went well and the file sorting completed successfully. Code for MacOS systems #!/bin/bash Source_dir=\"/Users/username/Downloads\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_picture=\"/Users/username/picture\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_video=\"/Users/username/video\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_music=\"/Users/username/music\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_documents=\"/Users/username/documents\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_archives=\"/Users/username/archives\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! echo \"Creating directories\" mkdir -p \"$Result_picture\" \"$Result_video\" \"$Result_documents\" \"$Result_music\" \"$Result_archives\" sleep 1 for file in \"$Source_dir\"/*; do if [ -f \"$file\" ]; then filename=$(basename \"$file\") case \"$filename\" in *.jpg|*.jpeg|*.png|*.gif|*.bmp) echo \"Moving $filename to picture directory\" mv \"$file\" \"$Result_picture\" ;; *.mp4|*.avi|*.mkv|*.wmv|*.flv) echo \"Moving $filename to video directory\" mv \"$file\" \"$Result_video\" ;; *.pdf|*.doc|*.docx|*.txt|*.rtf|*.xls|*.xlsx|*.ppt|*.pptx) echo \"Moving $filename to document directory\" mv \"$file\" \"$Result_documents\" ;; *.mp3|*.wav|*.aac|*.ogg) echo \"Moving $filename to music directory\" mv \"$file\" \"$Result_music\" ;; *.zip|*.rar|*.tar) echo \"Moving $filename to archive directory\" mv \"$file\" \"$Result_archives\" ;; *) echo \"Something went wrong...\" esac fi done echo \"File sorting was successfully completed.\"","title":"FOR PRIMITIVE"},{"location":"auto_sorter_en/auto_sorter_for_beg/#for-who-the-documentation-intended","text":"This guide is intended for people who want to understand my script from scratch. The analysis will be very detailed using simple terms (key concepts will be explained NOT only in technical language). ==IMPORTANT!== If you want to read the documentation quickly and concisely, please go to the section for developers (keep in mind that terms and other definitions won't be explained in the same way as in this documentation. If you're unsure about your skills, read this documentation first).","title":"For who the documentation intended?"},{"location":"auto_sorter_en/auto_sorter_for_beg/#what-does-the-script-do","text":"The script serves to sort files with different extensions into their corresponding directories.","title":"What does the script do?"},{"location":"auto_sorter_en/auto_sorter_for_beg/#script-logic","text":"Path Initialization - Defines the source directory ( Source_dir ) and target directories for different file types Directory Creation - Checks for the existence of target folders, creates them if absent File Processing Loop - For each file in the source directory: Determines the file extension Performs classification by the following types: Images (.jpg, .jpeg, .png, .gif, .bmp) Video (.mp4, .avi, .mkv, .wmv, .flv) Documents (.pdf, .doc, .docx, .txt, .rtf, .xls, .xlsx, .ppt, .pptx) Audio (.mp3, .wav, .aac, .ogg) Archives (.zip, .rar, .tar) ==Files are moved to corresponding target directories== Completion - Displays a message about successful sorting completion","title":"Script logic"},{"location":"auto_sorter_en/auto_sorter_for_beg/#system-compatibility","text":"Script intended for next systems: Linux MacOS It\u2019s worth to say, code will differ between the systems only in paths. First, let\u2019s start to analysis with Linux and second with MacOS","title":"System compatibility"},{"location":"auto_sorter_en/auto_sorter_for_beg/#code-for-linux-systems","text":"#!/bin/bash Source_dir=\"/home/username/Downloads\" # SET YOUR NICKNAME INSTEAD OF `username`!!! Result_picture=\"/home/username/picture\" # SET YOUR NICKNAME INSTEAD OF `username`!!! Result_video=\"/home/username/video\" # SET YOUR NICKNAME INSTEAD OF `username`!!! Result_music=\"/home/username/music\" # SET YOUR NICKNAME INSTEAD OF `username`!!! Result_documents=\"/home/username/documents\" # SET YOUR NICKNAME INSTEAD OF `username`!!! Result_archives=\"/home/username/archives\" # SET YOUR NICKNAME INSTEAD OF `username`!!! echo \"Creating directories\" mkdir -p \"$Result_picture\" \"$Result_video\" \"$Result_documents\" \"$Result_music\" \"$Result_archives\" sleep 1 for file in \"$Source_dir\"/*; do if [ -f \"$file\" ]; then filename=$(basename \"$file\") case \"$filename\" in *.jpg|*.jpeg|*.png|*.gif|*.bmp) echo \"Moving $filename to picture directory\" mv \"$file\" \"$Result_picture\" ;; *.mp4|*.avi|*.mkv|*.wmv|*.flv) echo \"Moving $filename to video directory\" mv \"$file\" \"$Result_video\" ;; *.pdf|*.doc|*.docx|*.txt|*.rtf|*.xls|*.xlsx|*.ppt|*.pptx) echo \"Moving $filename to document directory\" mv \"$file\" \"$Result_documents\" ;; *.mp3|*.wav|*.aac|*.ogg) echo \"Moving $filename to music directory\" mv \"$file\" \"$Result_music\" ;; *.zip|*.rar|*.tar) echo \"Moving $filename to archive directory\" mv \"$file\" \"$Result_archives\" ;; *) echo \"Something went wrong...\" esac fi done echo \"File sorting was successfully completed.\"","title":"Code for Linux systems:"},{"location":"auto_sorter_en/auto_sorter_for_beg/#line-by-line-analysis","text":"","title":"Line-by-line analysis"},{"location":"auto_sorter_en/auto_sorter_for_beg/#shebang-what-is-it","text":"shebang is the definition of the interpreter for executing the script. Roughly speaking, we tell the system that the interpreter will read the Bash script. #!/bin/bash","title":"Shebang - what is it?"},{"location":"auto_sorter_en/auto_sorter_for_beg/#variables-logic","text":"We initialize the target variable Source_dir and declare it as the path to the Downloads directory. Source_dir=\"/home/username/Downloads\" We'll take files from this variable and save them in the following directories: The picture target directory for the Result_picture variable. The video target directory for the Result_video variable. The music target directory for the Result_music variable. The documents target directory for the Result_documents variables. The archives target directory for the Result_archives variables. You might be wondering what happens if the user doesn't have these directories on their system. Will they have to create them themselves before using the script? The script, not the user, will create the target directories using the following command: mkdir -p \"$Result_picture\" \"$Result_video\" \"$Result_documents\" \"$Result_music\" \"$Result_archives\" The mkdir keyword in Bash (Bourne Again SHell) is a command that creates directories on the system. It's followed by the -p parameter, which creates the \"missing\" directory chain. I'd also like to mention two commands (echo, sleep). 1) The echo command outputs a specific text to the terminal (in our case, it's \"Creating directories\"). 2) The sleep command pauses (stops execution) for a specified (fixed) time, in our case, 1. After this time, the program resumes execution. This is simply to add some realism to the system's operation.","title":"Variables logic"},{"location":"auto_sorter_en/auto_sorter_for_beg/#cycle-and-condition","text":"for file in \"$Source_dir\"/*; do if [ -f \"$file\" ]; then filename=$(basename \"$file\") Here we use a Cycle, in programming there are several types of them, for example, the while cycle, or as in our case for, they serve as duplication of certain actions, for example, in our case we force the for cycle to \"iterate\" through the files in the specified directory. We'll create a file loop that will check all the contents ( * ) of the target Downloads directory. Keep in mind that the downloads directory may contain directories as well as files, but we only want files sorted into their assigned directories. We'll check: if [ -f \"$file\" ]; then filename=$(basename \"$file\") This code fragment contains an 'if then' condition. Bash has several types of these, just like loops, but we'll only touch on this one. A condition in programming is a test of a condition that can either be true (in Bash, true is denoted by 0) or false (in Bash, false is denoted by 1). We check with the -f parameter whether the iteration is a file, if so, then we create a filename variable, which stores the following: $(basename \"$file\") The basename keyword is a command that extracts a filename (including its extension). For example, if the loop finds the file testfile.png in the target Downloads directory, then filename will have the value testfile.png accordingly.","title":"Cycle and condition"},{"location":"auto_sorter_en/auto_sorter_for_beg/#case-construction","text":"case (or its equivalent in other programming languages, switch case ) is a Bash construct that simplifies code reading, makes it more concise, and allows for multiple conditions to be contained within a single block. Simply put, case is the same as an if then -type condition, only more suitable for large numbers of conditions (as in our case, for example). It looks like this: case \"$filename\" in *.jpg|*.jpeg|*.png|*.gif|*.bmp) echo \"Moving $filename to picture directory\" mv \"$file\" \"$Result_picture\" ;; *.mp4|*.avi|*.mkv|*.wmv|*.flv) echo \"Moving $filename to video directory\" mv \"$file\" \"$Result_video\" ;; *.pdf|*.doc|*.docx|*.txt|*.rtf|*.xls|*.xlsx|*.ppt|*.pptx) echo \"Moving $filename to document directory\" mv \"$file\" \"$Result_documents\" ;; *.mp3|*.wav|*.aac|*.ogg) echo \"Moving $filename to music directory\" mv \"$file\" \"$Result_music\" ;; *.zip|*.rar|*.tar) echo \"Moving $filename to archive directory\" mv \"$file\" \"$Result_archives\" ;; *) echo \"Something went wrong...\" esac At the very top of the code, we set a certain condition: \"If filename contains any of the file extensions listed below in its name, then redirect it to the corresponding target directory.\" It's worth noting that in Bash, the * symbol represents any name (for example, in our case - any filename). The | symbol means OR , meaning the condition allows us to check not just one extension, but multiple ones at once. The ;; symbol indicates the end of one condition. The *) symbol is a keyword used to specify a default case for the case construct (typically used to handle errors, for instance, when none of the file extensions match those we specified in the conditions). esac - the keyword used to indicate the end of the entire case conditional block. fi - marks the end of the if condition (the one that was above the case statement). done - indicates the end of the loop (located above the if then condition). The final echo tells us that everything went well and the file sorting completed successfully.","title":"case construction"},{"location":"auto_sorter_en/auto_sorter_for_beg/#code-for-macos-systems","text":"#!/bin/bash Source_dir=\"/Users/username/Downloads\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_picture=\"/Users/username/picture\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_video=\"/Users/username/video\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_music=\"/Users/username/music\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_documents=\"/Users/username/documents\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_archives=\"/Users/username/archives\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! echo \"Creating directories\" mkdir -p \"$Result_picture\" \"$Result_video\" \"$Result_documents\" \"$Result_music\" \"$Result_archives\" sleep 1 for file in \"$Source_dir\"/*; do if [ -f \"$file\" ]; then filename=$(basename \"$file\") case \"$filename\" in *.jpg|*.jpeg|*.png|*.gif|*.bmp) echo \"Moving $filename to picture directory\" mv \"$file\" \"$Result_picture\" ;; *.mp4|*.avi|*.mkv|*.wmv|*.flv) echo \"Moving $filename to video directory\" mv \"$file\" \"$Result_video\" ;; *.pdf|*.doc|*.docx|*.txt|*.rtf|*.xls|*.xlsx|*.ppt|*.pptx) echo \"Moving $filename to document directory\" mv \"$file\" \"$Result_documents\" ;; *.mp3|*.wav|*.aac|*.ogg) echo \"Moving $filename to music directory\" mv \"$file\" \"$Result_music\" ;; *.zip|*.rar|*.tar) echo \"Moving $filename to archive directory\" mv \"$file\" \"$Result_archives\" ;; *) echo \"Something went wrong...\" esac fi done echo \"File sorting was successfully completed.\"","title":"Code for MacOS systems"},{"location":"auto_sorter_en/auto_sorter_for_dev/","text":"Target Audience This API documentation is intended for developers who want to understand the script's structure and logic for potential modification or integration. The description will be technical but with explanations of key concepts. ==IMPORTANT!== If you need a beginner-friendly explanation, go to beginner doc. Script Purpose The script serves to sort files of different extensions into their corresponding directories. Script Logic Path Initialization - Defines source directory (Source_dir) and target directories for different file types Directory Creation - Checks for existence of target folders, creates them if absent File Processing Loop - For each file in the source directory: Determines file extension Classification by type: Images (.jpg, .jpeg, .png, .gif, .bmp) Video (.mp4, .avi, .mkv, .wmv, .flv) Documents (.pdf, .doc, .docx, .txt, .rtf, .xls, .xlsx, .ppt, .pptx) Audio (.mp3, .wav, .aac, .ogg) Archives (.zip, .rar, .tar) ==Files are moved to corresponding target directories== Completion - Displays success message upon sorting completion System Compatibility **Script is designed for: Linux MacOS Note that code differences between these two OSes are primarily in paths. We'll first analyze the Linux version, then MacOS. Code for Linux Systems: bash !/bin/bash Source_dir=\"/home/username/Downloads\" # REPLACE username WITH YOUR ACTUAL USERNAME!!! Result_picture=\"/home/username/picture\" # REPLACE username WITH YOUR ACTUAL USERNAME!!! Result_video=\"/home/username/video\" # REPLACE username WITH YOUR ACTUAL USERNAME!!! Result_music=\"/home/username/music\" # REPLACE username WITH YOUR ACTUAL USERNAME!!! Result_documents=\"/home/username/documents\" # REPLACE username WITH YOUR ACTUAL USERNAME!!! Result_archives=\"/home/username/archives\" # REPLACE username WITH YOUR ACTUAL USERNAME!!! echo \"Creating directories\" mkdir -p \"$Result_picture\" \"$Result_video\" \"$Result_documents\" \"$Result_music\" \"$Result_archives\" sleep 1 for file in \"$Source_dir\"/*; do if [ -f \"$file\" ]; then filename=$(basename \"$file\") case \"$filename\" in .jpg| .jpeg| .png| .gif| .bmp) echo \"Moving $filename to picture directory\" mv \"$file\" \"$Result_picture\" ;; .mp4| .avi| .mkv| .wmv| .flv) echo \"Moving $filename to video directory\" mv \"$file\" \"$Result_video\" ;; .pdf| .doc| .docx| .txt| .rtf| .xls| .xlsx| .ppt| .pptx) echo \"Moving $filename to document directory\" mv \"$file\" \"$Result_documents\" ;; .mp3| .wav| .aac| .ogg) echo \"Moving $filename to music directory\" mv \"$file\" \"$Result_music\" ;; .zip| .rar| .tar) echo \"Moving $filename to archive directory\" mv \"$file\" \"$Result_archives\" ;; *) echo \"Something went wrong...\" esac fi done echo \"File sorting was successfully completed.\" API Architecture (Line-by-Line Analysis) Variable Logic Initialize the target variable Source_dir and define it as the path to the Downloads directory. bash Source_dir=\"/home/username/Downloads\" This variable serves as the source from which files will be extracted and distributed to the following directories: Target directory picture - destination for images Target directory video - destination for videos Target directory music - destination for audio Target directory documents - destination for documents Target directory archives - destination for archives mkdir -p Command bash mkdir -p \"$Result_picture\" \"$Result_video\" \"$Result_documents\" \"$Result_music\" \"$Result_archives\" Purpose: Recursive creation of directories according to corresponding variables Flag: -p - creates directory chain Loop and Condition Loop: for file in \"$Source_dir\"/ bash for file in \"$Source_dir\"/ ; do Purpose: iterate through elements in source directory Condition: if [ -f \"$file\" ] bash if [ -f \"$file\" ]; then Type: element type check Flag: -f - file existence check Return: boolean (0 - file exists, 1 - not a file) If $file == 0, execute the following: bash filename=$(basename \"$file\") basename function: Purpose: extract filename with extension Input: full file path Output: filename with extension Case Construct Type: multi-conditional operator Purpose: route files by extensions bash case \"$filename\" in .jpg| .jpeg| .png| .gif| .bmp) echo \"Moving $filename to picture directory\" mv \"$file\" \"$Result_picture\" ;; .mp4| .avi| .mkv| .wmv| .flv) echo \"Moving $filename to video directory\" mv \"$file\" \"$Result_video\" ;; .pdf| .doc| .docx| .txt| .rtf| .xls| .xlsx| .ppt| .pptx) echo \"Moving $filename to document directory\" mv \"$file\" \"$Result_documents\" ;; .mp3| .wav| .aac| .ogg) echo \"Moving $filename to music directory\" mv \"$file\" \"$Result_music\" ;; .zip| .rar| .tar) echo \"Moving $filename to archive directory\" mv \"$file\" \"$Result_archives\" ;; *) echo \"Something went wrong...\" esac Classification: Images (.jpg, .jpeg, .png, .gif, .bmp) Video (.mp4, .avi, .mkv, .wmv, .flv) Documents (.pdf, .doc, .docx, .txt, .rtf, .xls, .xlsx, .ppt, .pptx) Audio (.mp3, .wav, .aac, .ogg) Archives (.zip, .rar, .tar) Code for MacOS Systems: bash !/bin/bash Source_dir=\"/Users/username/Downloads\" # REPLACE WITH YOUR ACTUAL USERNAME!!! Result_picture=\"/Users/username/picture\" # REPLACE WITH YOUR ACTUAL USERNAME!!! Result_video=\"/Users/username/video\" # REPLACE WITH YOUR ACTUAL USERNAME!!! Result_music=\"/Users/username/music\" # REPLACE WITH YOUR ACTUAL USERNAME!!! Result_documents=\"/Users/username/documents\" # REPLACE WITH YOUR ACTUAL USERNAME!!! Result_archives=\"/Users/username/archives\" # REPLACE WITH YOUR ACTUAL USERNAME!!! echo \"Creating directories\" mkdir -p \"$Result_picture\" \"$Result_video\" \"$Result_documents\" \"$Result_music\" \"$Result_archives\" sleep 1 for file in \"$Source_dir\"/*; do if [ -f \"$file\" ]; then filename=$(basename \"$file\") case \"$filename\" in .jpg| .jpeg| .png| .gif| .bmp) echo \"Moving $filename to picture directory\" mv \"$file\" \"$Result_picture\" ;; .mp4| .avi| .mkv| .wmv| .flv) echo \"Moving $filename to video directory\" mv \"$file\" \"$Result_video\" ;; .pdf| .doc| .docx| .txt| .rtf| .xls| .xlsx| .ppt| .pptx) echo \"Moving $filename to document directory\" mv \"$file\" \"$Result_documents\" ;; .mp3| .wav| .aac| .ogg) echo \"Moving $filename to music directory\" mv \"$file\" \"$Result_music\" ;; .zip| .rar| .tar) echo \"Moving $filename to archive directory\" mv \"$file\" \"$Result_archives\" ;; *) echo \"Something went wrong...\" esac fi done echo \"File sorting was successfully completed.\"","title":"FOR ADVANCED"},{"location":"auto_sorter_en/auto_sorter_for_dev/#binbash","text":"Source_dir=\"/home/username/Downloads\" # REPLACE username WITH YOUR ACTUAL USERNAME!!! Result_picture=\"/home/username/picture\" # REPLACE username WITH YOUR ACTUAL USERNAME!!! Result_video=\"/home/username/video\" # REPLACE username WITH YOUR ACTUAL USERNAME!!! Result_music=\"/home/username/music\" # REPLACE username WITH YOUR ACTUAL USERNAME!!! Result_documents=\"/home/username/documents\" # REPLACE username WITH YOUR ACTUAL USERNAME!!! Result_archives=\"/home/username/archives\" # REPLACE username WITH YOUR ACTUAL USERNAME!!! echo \"Creating directories\" mkdir -p \"$Result_picture\" \"$Result_video\" \"$Result_documents\" \"$Result_music\" \"$Result_archives\" sleep 1 for file in \"$Source_dir\"/*; do if [ -f \"$file\" ]; then filename=$(basename \"$file\") case \"$filename\" in .jpg| .jpeg| .png| .gif| .bmp) echo \"Moving $filename to picture directory\" mv \"$file\" \"$Result_picture\" ;; .mp4| .avi| .mkv| .wmv| .flv) echo \"Moving $filename to video directory\" mv \"$file\" \"$Result_video\" ;; .pdf| .doc| .docx| .txt| .rtf| .xls| .xlsx| .ppt| .pptx) echo \"Moving $filename to document directory\" mv \"$file\" \"$Result_documents\" ;; .mp3| .wav| .aac| .ogg) echo \"Moving $filename to music directory\" mv \"$file\" \"$Result_music\" ;; .zip| .rar| .tar) echo \"Moving $filename to archive directory\" mv \"$file\" \"$Result_archives\" ;; *) echo \"Something went wrong...\" esac fi done echo \"File sorting was successfully completed.\" API Architecture (Line-by-Line Analysis) Variable Logic Initialize the target variable Source_dir and define it as the path to the Downloads directory. bash Source_dir=\"/home/username/Downloads\" This variable serves as the source from which files will be extracted and distributed to the following directories: Target directory picture - destination for images Target directory video - destination for videos Target directory music - destination for audio Target directory documents - destination for documents Target directory archives - destination for archives mkdir -p Command bash mkdir -p \"$Result_picture\" \"$Result_video\" \"$Result_documents\" \"$Result_music\" \"$Result_archives\" Purpose: Recursive creation of directories according to corresponding variables Flag: -p - creates directory chain Loop and Condition Loop: for file in \"$Source_dir\"/ bash for file in \"$Source_dir\"/ ; do Purpose: iterate through elements in source directory Condition: if [ -f \"$file\" ] bash if [ -f \"$file\" ]; then Type: element type check Flag: -f - file existence check Return: boolean (0 - file exists, 1 - not a file) If $file == 0, execute the following: bash filename=$(basename \"$file\") basename function: Purpose: extract filename with extension Input: full file path Output: filename with extension Case Construct Type: multi-conditional operator Purpose: route files by extensions bash case \"$filename\" in .jpg| .jpeg| .png| .gif| .bmp) echo \"Moving $filename to picture directory\" mv \"$file\" \"$Result_picture\" ;; .mp4| .avi| .mkv| .wmv| .flv) echo \"Moving $filename to video directory\" mv \"$file\" \"$Result_video\" ;; .pdf| .doc| .docx| .txt| .rtf| .xls| .xlsx| .ppt| .pptx) echo \"Moving $filename to document directory\" mv \"$file\" \"$Result_documents\" ;; .mp3| .wav| .aac| .ogg) echo \"Moving $filename to music directory\" mv \"$file\" \"$Result_music\" ;; .zip| .rar| .tar) echo \"Moving $filename to archive directory\" mv \"$file\" \"$Result_archives\" ;; *) echo \"Something went wrong...\" esac Classification: Images (.jpg, .jpeg, .png, .gif, .bmp) Video (.mp4, .avi, .mkv, .wmv, .flv) Documents (.pdf, .doc, .docx, .txt, .rtf, .xls, .xlsx, .ppt, .pptx) Audio (.mp3, .wav, .aac, .ogg) Archives (.zip, .rar, .tar) Code for MacOS Systems: bash","title":"!/bin/bash"},{"location":"auto_sorter_en/auto_sorter_for_dev/#binbash_1","text":"Source_dir=\"/Users/username/Downloads\" # REPLACE WITH YOUR ACTUAL USERNAME!!! Result_picture=\"/Users/username/picture\" # REPLACE WITH YOUR ACTUAL USERNAME!!! Result_video=\"/Users/username/video\" # REPLACE WITH YOUR ACTUAL USERNAME!!! Result_music=\"/Users/username/music\" # REPLACE WITH YOUR ACTUAL USERNAME!!! Result_documents=\"/Users/username/documents\" # REPLACE WITH YOUR ACTUAL USERNAME!!! Result_archives=\"/Users/username/archives\" # REPLACE WITH YOUR ACTUAL USERNAME!!! echo \"Creating directories\" mkdir -p \"$Result_picture\" \"$Result_video\" \"$Result_documents\" \"$Result_music\" \"$Result_archives\" sleep 1 for file in \"$Source_dir\"/*; do if [ -f \"$file\" ]; then filename=$(basename \"$file\") case \"$filename\" in .jpg| .jpeg| .png| .gif| .bmp) echo \"Moving $filename to picture directory\" mv \"$file\" \"$Result_picture\" ;; .mp4| .avi| .mkv| .wmv| .flv) echo \"Moving $filename to video directory\" mv \"$file\" \"$Result_video\" ;; .pdf| .doc| .docx| .txt| .rtf| .xls| .xlsx| .ppt| .pptx) echo \"Moving $filename to document directory\" mv \"$file\" \"$Result_documents\" ;; .mp3| .wav| .aac| .ogg) echo \"Moving $filename to music directory\" mv \"$file\" \"$Result_music\" ;; .zip| .rar| .tar) echo \"Moving $filename to archive directory\" mv \"$file\" \"$Result_archives\" ;; *) echo \"Something went wrong...\" esac fi done echo \"File sorting was successfully completed.\"","title":"!/bin/bash"},{"location":"auto_sorter_ru/auto_sorter_for_beg/","text":"\u0414\u043b\u044f \u043a\u043e\u0433\u043e \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0430 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f? \u0414\u0430\u043d\u043d\u043e\u0435 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0430 \u0434\u043b\u044f \u0442\u0435\u0445 \u043b\u044e\u0434\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0445\u043e\u0442\u044f\u0442 \u0440\u0430\u0437\u043e\u0431\u0440\u0430\u0442\u044c\u0441\u044f \u0441 \u043d\u0443\u043b\u044f \u0432 \u043c\u043e\u0435\u043c \u0441\u043a\u0440\u0438\u043f\u0442\u0435. \u0420\u0430\u0437\u0431\u043e\u0440 \u0431\u0443\u0434\u0435\u0442 \u043e\u0447\u0435\u043d\u044c \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u044b\u043c, \u043f\u0440\u043e\u0441\u0442\u044b\u043c (\u0442\u0435\u0440\u043c\u0438\u043d\u044b \u0438 \u0434\u0440. \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u0441\u043b\u043e\u0432\u0430 \u0431\u0443\u0434\u0443\u0442 \u043e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u044b \u041d\u0415 \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u043c \u044f\u0437\u044b\u043a\u043e\u043c). ==\u0412\u0410\u0416\u041d\u041e!== \u0415\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043a\u0440\u0430\u0442\u043a\u043e \u0438 \u0431\u044b\u0441\u0442\u0440\u043e \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u043f\u0435\u0440\u0435\u0439\u0434\u0438\u0442\u0435 \u0432 \u0440\u0430\u0437\u0434\u0435\u043b \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u0434\u043b\u044f \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432 ( (\u0438\u043c\u0435\u0439\u0442\u0435 \u0432 \u0432\u0438\u0434\u0443, \u0442\u0435\u0440\u043c\u0438\u043d\u044b \u0438 \u0434\u0440\u0443\u0433\u0438\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043d\u0435 \u0431\u0443\u0434\u0443\u0442 \u043e\u0431\u044a\u044f\u0441\u043d\u044f\u0442\u044c\u0441\u044f \u0442\u0430\u043a \u0436\u0435, \u043a\u0430\u043a \u0438 \u0432 \u044d\u0442\u043e\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438. \u0415\u0441\u043b\u0438 \u0432\u044b \u043d\u0435 \u0443\u0432\u0435\u0440\u0435\u043d\u044b \u0432 \u0441\u0432\u043e\u0438\u0445 \u0441\u0438\u043b\u0430\u0445 \u0438 \u043d\u0430\u0432\u044b\u043a\u0430\u0445, \u0442\u043e \u0441\u043f\u0435\u0440\u0432\u0430 \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u044d\u0442\u0443 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e). \u0427\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442 \u0441\u043a\u0440\u0438\u043f\u0442? \u0421\u043a\u0440\u0438\u043f\u0442 \u0441\u043b\u0443\u0436\u0438\u0442 \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0444\u0430\u0439\u043b\u043e\u0432 \u0440\u0430\u0437\u043d\u044b\u0445 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0439 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0438\u043c \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438. \u041b\u043e\u0433\u0438\u043a\u0430 \u0441\u043a\u0440\u0438\u043f\u0442\u0430 \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0443\u0442\u0435\u0439 - \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u044e\u0442\u0441\u044f \u0438\u0441\u0445\u043e\u0434\u043d\u0430\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f (Source_dir) \u0438 \u0446\u0435\u043b\u0435\u0432\u044b\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u0434\u043b\u044f \u0440\u0430\u0437\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0432 \u0444\u0430\u0439\u043b\u043e\u0432 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0439 - \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442\u0441\u044f \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043e\u0432\u0430\u043d\u0438\u0435 \u0446\u0435\u043b\u0435\u0432\u044b\u0445 \u043f\u0430\u043f\u043e\u043a, \u043f\u0440\u0438 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0438 - \u0441\u043e\u0437\u0434\u0430\u044e\u0442\u0441\u044f \u0426\u0438\u043a\u043b \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0444\u0430\u0439\u043b\u043e\u0432 - \u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0432 \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438:- \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430 \u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u043f\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u0442\u0438\u043f\u0430\u043c: \u0418\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f (.jpg, .jpeg, .png, .gif, .bmp) \u0412\u0438\u0434\u0435\u043e (.mp4, .avi, .mkv, .wmv, .flv) \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b (.pdf, .doc, .docx, .txt, .rtf, .xls, .xlsx, .ppt, .pptx) \u0410\u0443\u0434\u0438\u043e (.mp3, .wav, .aac, .ogg) \u0410\u0440\u0445\u0438\u0432\u044b (.zip, .rar, .tar) ==\u0424\u0430\u0439\u043b\u044b \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0430\u044e\u0442\u0441\u044f \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0446\u0435\u043b\u0435\u0432\u044b\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438== \u0417\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0435 - \u0412\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u043c \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0438 \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0438 \u0421\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u044c \u0441\u0438\u0441\u0442\u0435\u043c \u0421\u043a\u0440\u0438\u043f\u0442 \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d \u0434\u043b\u044f: * **Linux * MacOS \u0421\u0442\u043e\u0438\u0442 \u0441\u043a\u0430\u0437\u0430\u0442\u044c, \u0447\u0442\u043e \u043a\u043e\u0434, \u043c\u0435\u0436\u0434\u0443 \u044d\u0442\u0438\u043c\u0438 \u0434\u0432\u0443\u043c\u044f \u041e\u0421, \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u043b\u0438\u0447\u0430\u0442\u044c\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0443\u0442\u044f\u043c\u0438. \u0414\u043b\u044f \u043d\u0430\u0447\u0430\u043b\u043e \u0441\u0434\u0435\u043b\u0430\u0435\u043c \u0440\u0430\u0437\u0431\u043e\u0440 \u0434\u043b\u044f Linux, \u043f\u043e\u0441\u043b\u0435 \u0443\u0436\u0435 \u0434\u043b\u044f MacOS. \u041a\u043e\u0434 \u0434\u043b\u044f Linux \u0441\u0438\u0441\u0442\u0435\u043c: !/bin/bash Source_dir=\"/home/username/Downloads\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_picture=\"/home/username/picture\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_video=\"/home/username/video\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_music=\"/home/username/music\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_documents=\"/home/username/documents\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_archives=\"/home/username/archives\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! echo \"Creating directories\" mkdir -p \"$Result_picture\" \"$Result_video\" \"$Result_documents\" \"$Result_music\" \"$Result_archives\" sleep 1 for file in \"$Source_dir\"/*; do if [ -f \"$file\" ]; then filename=$(basename \"$file\") case \"$filename\" in .jpg| .jpeg| .png| .gif| .bmp) echo \"Moving $filename to picture directory\" mv \"$file\" \"$Result_picture\" ;; .mp4| .avi| .mkv| .wmv| .flv) echo \"Moving $filename to video directory\" mv \"$file\" \"$Result_video\" ;; .pdf| .doc| .docx| .txt| .rtf| .xls| .xlsx| .ppt| .pptx) echo \"Moving $filename to document directory\" mv \"$file\" \"$Result_documents\" ;; .mp3| .wav| .aac| .ogg) echo \"Moving $filename to music directory\" mv \"$file\" \"$Result_music\" ;; .zip| .rar| .tar) echo \"Moving $filename to archive directory\" mv \"$file\" \"$Result_archives\" ;; *) echo \"Something went wrong...\" esac fi done echo \"File sorting was successfully completed.\" \u041f\u043e\u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0439 \u0440\u0430\u0437\u0431\u043e\u0440 Shebang (\u0448\u0435\u0431\u0430\u043d\u0433) - \u0447\u0442\u043e \u044d\u0442\u043e? shebang - \u044d\u0442\u043e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0442\u043e\u0440\u0430 \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0441\u043a\u0440\u0438\u043f\u0442\u0430. \u0413\u0440\u0443\u0431\u043e \u0433\u043e\u0432\u043e\u0440\u044f, \u043c\u044b \u0433\u043e\u0432\u043e\u0440\u0438\u043c \u0441\u0438\u0441\u0442\u0435\u043c\u0435 \u0447\u0442\u043e \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0442\u043e\u0440 \u0431\u0443\u0434\u0435\u0442 \u0447\u0438\u0442\u0430\u0442\u044c Bash \u0441\u043a\u0440\u0438\u043f\u0442. !/bin/bash \u041b\u043e\u0433\u0438\u043a\u0430 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u0446\u0435\u043b\u0435\u0432\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e Source_dir \u0438 \u043e\u0431\u044a\u044f\u0432\u043b\u044f\u0435\u043c \u0435\u0451 \u043a\u0430\u043a \u043f\u0443\u0442\u044c \u043a \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 Downloads. Source_dir=\"/home/username/Downloads\" \u0418\u043c\u0435\u043d\u043d\u043e \u0438\u0437 \u044d\u0442\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u044b \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0431\u0440\u0430\u0442\u044c \u0444\u0430\u0439\u043b\u044b \u0438 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0442\u044c \u0438\u0445 \u043f\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f\u043c: 1. \u0426\u0435\u043b\u0435\u0432\u0430\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f picture \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u044b Result_picture. 2. \u0426\u0435\u043b\u0435\u0432\u0430\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f video \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u044b Result_video. 3. \u0426\u0435\u043b\u0435\u0432\u0430\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f music \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u044b Result_music. 4. \u0426\u0435\u043b\u0435\u0432\u0430\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f documents \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u044b Result_documents. 5. \u0426\u0435\u043b\u0435\u0432\u0430\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f archives \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u044b Result_archives. \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0432\u044b \u0437\u0430\u0434\u0430\u0434\u0438\u0442\u0435\u0441\u044c \u0432\u043e\u043f\u0440\u043e\u0441\u043e\u043c, \u0430 \u0447\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0435\u0441\u043b\u0438 \u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0435 \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u044d\u0442\u0438\u0445 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0439, \u0435\u043c\u0443 \u0447\u0442\u043e, \u0441\u0430\u043c\u043e\u043c\u0443 \u043f\u0440\u0438\u0434\u0435\u0442\u0441\u044f \u0438\u0445 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u043f\u0435\u0440\u0435\u0434 \u043d\u0430\u0447\u0430\u043b\u043e\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u043c!? - \u0421\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u044f\u0432\u043d\u043e \u0446\u0435\u043b\u0435\u0432\u044b\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u0431\u0443\u0434\u0435\u0442 \u043d\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c, \u0430 \u0441\u043a\u0440\u0438\u043f\u0442, \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u043a\u043e\u043c\u0430\u043d\u0434\u0435: mkdir -p \"$Result_picture\" \"$Result_video\" \"$Result_documents\" \"$Result_music\" \"$Result_archives\" \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0435 \u0441\u043b\u043e\u0432\u043e mkdir \u0432 Bash (Bourne Again SHell) - \u044d\u0442\u043e \u043a\u043e\u043c\u0430\u043d\u0434\u0430, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0435. \u041f\u043e\u0441\u043b\u0435 \u043d\u0435\u0433\u043e \u0441\u0442\u043e\u0438\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 -p, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043b\u0443\u0436\u0438\u0442 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435\u043c \"\u043d\u0435\u0434\u043e\u0441\u0442\u0430\u044e\u0449\u0435\u0439\" \u0446\u0435\u043f\u043e\u0447\u043a\u0438 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0439. \u0425\u043e\u0442\u0435\u043b\u043e\u0441\u044c \u0431\u044b \u0435\u0449\u0435 \u0443\u043f\u043e\u043c\u044f\u043d\u0443\u0442\u044c \u0434\u0432\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b (echo, sleep) 1) \u043a\u043e\u043c\u0430\u043d\u0434\u0430 echo - \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0442\u0435\u043a\u0441\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442 \u0432 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b (\u0432 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 - \u044d\u0442\u043e Creating directories). 2) \u043a\u043e\u043c\u0430\u043d\u0434\u0430 sleep \u0434\u0435\u043b\u0430\u0435\u0442 \u043f\u0430\u0443\u0437\u0443 (\u043f\u0440\u0435\u043a\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0443) \u043d\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0435 (\u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435) \u0432\u0440\u0435\u043c\u044f, \u0432 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 - \u044d\u0442\u043e 1, \u043f\u043e\u0441\u043b\u0435 \u043f\u0440\u043e\u0439\u0434\u0435\u043d\u043d\u043e\u0433\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438, \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043e\u043f\u044f\u0442\u044c \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0434\u0430\u043b\u044c\u0448\u0435. \u0421\u043b\u0443\u0436\u0438\u0442 \u043e\u043d\u0430 \u043f\u0440\u043e\u0441\u0442\u043e \u0440\u0430\u0434\u0438 \u043d\u0435\u043a\u043e\u0433\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043c\u0430 \u0440\u0430\u0431\u043e\u0442\u044b \u0441\u0438\u0441\u0442\u0435\u043c\u044b. \u0426\u0438\u043a\u043b \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 for file in \"$Source_dir\"/*; do if [ -f \"$file\" ]; then filename=$(basename \"$file\") \u0417\u0434\u0435\u0441\u044c \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0426\u0438\u043a\u043b, \u0432 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 \u0438\u0445 \u0435\u0441\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0442\u0438\u043f\u043e\u0432, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 \u0446\u0438\u043a\u043b while, \u0438\u043b\u0438 \u0436\u0435 \u043a\u0430\u043a \u0432 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 for, \u043e\u043d\u0438 \u0441\u043b\u0443\u0436\u0430\u0442 \u0434\u0443\u0431\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0432 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043c\u044b \u0437\u0430\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c \u0446\u0438\u043a\u043b for \"\u043f\u0435\u0440\u0435\u0431\u0438\u0440\u0430\u0442\u044c\" \u0444\u0430\u0439\u043b\u044b \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438. \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0446\u0438\u043a\u043b file \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c \u0432\u0441\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 (*) \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 Downloads. \u041d\u0435 \u0437\u0430\u0431\u044b\u0432\u0430\u0435\u043c, \u0447\u0442\u043e \u0435\u0441\u0442\u044c \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u044c \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u0432 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043e\u043a \u0435\u0441\u0442\u044c \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0444\u0430\u0439\u043b\u044b, \u0430 \u0442\u0430\u043a \u0436\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438, \u043d\u043e \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0447\u0442\u043e\u0431\u044b \u0442\u043e\u043b\u044c\u043a\u043e \u0444\u0430\u0439\u043b\u044b \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043b\u0438\u0441\u044c \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u043c \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438, \u0441\u0434\u0435\u043b\u0430\u0435\u043c \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443: if [ -f \"$file\" ]; then filename=$(basename \"$file\") \u0412 \u044d\u0442\u043e\u043c \u0444\u0440\u0430\u0433\u043c\u0435\u043d\u0442\u0435 \u043a\u043e\u0434\u0430 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0443\u0441\u043b\u043e\u0432\u0438\u0435 if then, \u0432 bash \u0438\u0445 \u0435\u0441\u0442\u044c \u0442\u043e\u0436\u0435 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0442\u0438\u043f\u043e\u0432, \u043a\u0430\u043a \u0438 \u0441 \u0446\u0438\u043a\u043b\u0430\u043c\u0438, \u043d\u043e \u0437\u0430\u0442\u0440\u043e\u043d\u0435\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u044d\u0442\u043e\u0442. \u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0432 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 - \u044d\u0442\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043a\u0430\u043a\u043e\u0433\u043e \u043b\u0438\u0431\u043e \u0443\u0441\u043b\u043e\u0432\u0438\u044f, \u043e\u043d\u043e \u043c\u043e\u0436\u0435\u0442 \u043b\u0438\u0431\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c\u0441\u044f (\u0432 bash \u0438\u0441\u0442\u0438\u043d\u0443 \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0430\u044e\u0442 \u043a\u0430\u043a 0), \u043b\u0438\u0431\u043e \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c\u0441\u044f (\u0432 \u0442\u043e\u043c \u0436\u0435 bash \u043b\u043e\u0436\u044c \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0430\u044e\u0442 \u043a\u0430\u043a 1). \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0443 -f \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0438\u0442\u0435\u0440\u0430\u0446\u0438\u044f \u0444\u0430\u0439\u043b\u043e\u043c, \u0435\u0441\u043b\u0438 \u044d\u0442\u043e \u0442\u0430\u043a, \u0442\u043e \u0442\u043e\u0433\u0434\u0430 \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e filename, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0445\u0440\u0430\u043d\u0438\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0435: $(basename \"$file\") \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0435 \u0441\u043b\u043e\u0432\u043e basename - \u043a\u043e\u043c\u0430\u043d\u0434\u0430, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0438\u0437\u0432\u043b\u0435\u043a\u0430\u0435\u0442 \u0438\u043c\u044f \u0444\u0430\u0439\u043b\u0430 (\u0432 \u0442\u043e\u043c \u0447\u0438\u0441\u043b\u0435 \u0438 \u0435\u0433\u043e \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435). \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0435\u0441\u043b\u0438 \u0446\u0438\u043a\u043b \u043d\u0430\u0439\u0434\u0435\u0442 \u0432 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 Downloads \u0444\u0430\u0439\u043b testfile.png, \u0442\u043e \u0443 filename \u0431\u0443\u0434\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043a\u0430\u043a testfile.png \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e. \u041a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f case case (\u0438\u043b\u0438 \u0435\u0433\u043e \u0430\u043d\u0430\u043b\u043e\u0433 \u0432 \u0434\u0440\u0443\u0433\u0438\u0445 \u044f\u0437\u044b\u043a\u0430\u0445 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f - switch case) - \u044d\u0442\u043e \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f \u0432 Bash, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0443\u043f\u0440\u043e\u0449\u0430\u0435\u0442 \u0447\u0442\u0435\u043d\u0438\u0435 \u043a\u043e\u0434\u0430, \u0434\u0435\u043b\u0430\u0435\u0442 \u0435\u0433\u043e \u0431\u043e\u043b\u0435\u0435 \u043b\u0430\u043a\u043e\u043d\u0438\u0447\u043d\u044b\u043c \u0438 \u0443\u0434\u043e\u0431\u043d\u044b\u043c \u0438\u0437-\u0437\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u044f \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0430 \u0443\u0441\u043b\u043e\u0432\u0438\u0439 \u0432 \u043e\u0434\u043d\u043e\u043c \u0431\u043b\u043e\u043a\u0435. \u041f\u0440\u043e\u0441\u0442\u044b\u043c\u0438 \u0441\u043b\u043e\u0432\u0430\u043c\u0438, case - \u044d\u0442\u043e \u0442\u043e\u0436\u0435 \u0441\u0430\u043c\u043e\u0435 \u0447\u0442\u043e \u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u043f\u043e \u0442\u0438\u043f\u0443 if then, \u0442\u043e\u043b\u044c\u043a\u043e \u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0430\u044f \u0434\u043b\u044f \u0431\u043e\u043b\u044c\u0448\u0438\u0445 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0443\u0441\u043b\u043e\u0432\u0438\u0439 (\u043a\u0430\u043a \u0432 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440). \u0412\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u043e\u043d\u0430 \u0442\u0430\u043a: case \"$filename\" in .jpg| .jpeg| .png| .gif| .bmp) echo \"Moving $filename to picture directory\" mv \"$file\" \"$Result_picture\" ;; .mp4| .avi| .mkv| .wmv| .flv) echo \"Moving $filename to video directory\" mv \"$file\" \"$Result_video\" ;; .pdf| .doc| .docx| .txt| .rtf| .xls| .xlsx| .ppt| .pptx) echo \"Moving $filename to document directory\" mv \"$file\" \"$Result_documents\" ;; .mp3| .wav| .aac| .ogg) echo \"Moving $filename to music directory\" mv \"$file\" \"$Result_music\" ;; .zip| .rar| .tar) echo \"Moving $filename to archive directory\" mv \"$file\" \"$Result_archives\" ;; *) echo \"Something went wrong...\" esac \u0432 \u0441\u0430\u043c\u043e\u0439 \u0432\u0435\u0440\u0445\u043d\u0435\u0439 \u0447\u0430\u0441\u0442\u0438 \u043a\u043e\u0434\u0430 \u043c\u044b \u0441\u0442\u0430\u0432\u0438\u043c \u043d\u0435\u043a\u043e\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u0435: \"\u0415\u0441\u043b\u0438 filename \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432 \u0441\u0432\u043e\u0435\u043c \u0438\u043c\u0435\u043d\u0438 \u043a\u0430\u043a\u043e\u0439 \u043b\u0438\u0431\u043e \u0438\u0437 \u043d\u0438\u0436\u0435 \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0445 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0439 \u0444\u0430\u0439\u043b\u043e\u0432, \u0442\u043e \u0442\u043e\u0433\u0434\u0430 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0439 \u0432 \u0442\u0443 \u0446\u0435\u043b\u0435\u0432\u0443\u044e \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0435\u0451 \u0438 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442\". \u0421\u0442\u043e\u0438\u0442 \u0441\u043a\u0430\u0437\u0430\u0442\u044c \u0447\u0442\u043e \u0432 Bash \u0441\u0438\u043c\u0432\u043e\u043b * - \u044d\u0442\u043e \u043b\u044e\u0431\u043e\u0435 \u0438\u043c\u044f (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0432 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 - \u043b\u044e\u0431\u043e\u0435 \u0438\u043c\u044f \u0444\u0430\u0439\u043b\u0430). \u0421\u0438\u043c\u0432\u043e\u043b | \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442 \u0418\u041b\u0418, \u0442\u043e \u0435\u0441\u0442\u044c \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u0438 \u043d\u0430\u043c \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u043d\u043e \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435, \u0430 \u0441\u0440\u0430\u0437\u0443 \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e. \u0421\u0438\u043c\u0432\u043e\u043b ;; \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442 \u043a\u043e\u043d\u0435\u0446 \u043e\u0434\u043d\u043e\u0433\u043e \u0443\u0441\u043b\u043e\u0432\u0438\u044f. \u0421\u0438\u043c\u0432\u043e\u043b *) - \u044d\u0442\u043e \u043a\u043b. \u0441\u043b\u043e\u0432\u043e \u043f\u0440\u0438 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043c\u044b \u0434\u0430\u0435\u043c \u043f\u043e\u043d\u044f\u0442\u044c \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 case \u0447\u0442\u043e \u043c\u044b \u0431\u044b \u0445\u043e\u0442\u0435\u043b\u0438 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0443\u0441\u043b\u043e\u0432\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e (\u043e\u0431\u044b\u0447\u043d\u043e \u0435\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442 \u0434\u043b\u044f \u0432\u044b\u0432\u043e\u0434\u0430 \u043e\u0448\u0438\u0431\u043a\u0438, \u0435\u0441\u043b\u0438 \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043a\u0430\u043a \u0432 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u043d\u0438 \u043e\u0434\u043d\u043e \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430 \u043d\u0435 \u0441\u043e\u0432\u043f\u0430\u043b\u043e \u0441 \u0442\u0435\u043c, \u0447\u0442\u043e \u043c\u044b \u043d\u0430\u043f\u0438\u0441\u0430\u043b\u0438 \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445). esac - \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0435 \u0441\u043b\u043e\u0432\u043e, \u043f\u0440\u0438 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043c\u044b \u0434\u0430\u0435\u043c \u043f\u043e\u043d\u044f\u0442\u044c \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 case \u0447\u0442\u043e \u043c\u044b \u0445\u043e\u0442\u0438\u043c \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u0442\u044c \u0446\u0435\u043b\u044b\u0439 \u0431\u043b\u043e\u043a \u0443\u0441\u043b\u043e\u0432\u0438\u0439. fi - \u044d\u0442\u043e \u043a\u043e\u043d\u0435\u0446 \u0443\u0441\u043b\u043e\u0432\u0438\u044f (\u0442\u043e\u0433\u043e \u0441\u0430\u043c\u043e\u0433\u043e, \u0447\u0442\u043e \u0431\u044b\u043b \u0435\u0449\u0435 \u043d\u0430\u0434 case). done - \u044d\u0442\u043e \u043a\u043e\u043d\u0435\u0446 \u0446\u0438\u043a\u043b\u0430 (\u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u043d\u0430\u0434 \u0443\u0441\u043b\u043e\u0432\u0438\u0435\u043c if then). \u043a\u043e\u043d\u0435\u0447\u043d\u044b\u0439 echo \u0433\u043e\u0432\u043e\u0440\u0438\u0442 \u043d\u0430\u043c \u043e \u0442\u043e\u043c, \u0447\u0442\u043e \u0432\u0441\u0435 \u043f\u0440\u043e\u0448\u043b\u043e \u0445\u043e\u0440\u043e\u0448\u043e, \u0438 \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0444\u0430\u0439\u043b\u0430 \u043f\u0440\u043e\u0448\u043b\u043e \u0443\u0441\u043f\u0435\u0448\u043d\u043e. \u041a\u043e\u0434 \u0434\u043b\u044f MacOS \u0441\u0438\u0441\u0442\u0435\u043c: !/bin/bash Source_dir=\"/Users/username/Downloads\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_picture=\"/Users/username/picture\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_video=\"/Users/username/video\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_music=\"/Users/username/music\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_documents=\"/Users/username/documents\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_archives=\"/Users/username/archives\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! echo \"Creating directories\" mkdir -p \"$Result_picture\" \"$Result_video\" \"$Result_documents\" \"$Result_music\" \"$Result_archives\" sleep 1 for file in \"$Source_dir\"/*; do if [ -f \"$file\" ]; then filename=$(basename \"$file\") case \"$filename\" in .jpg| .jpeg| .png| .gif| .bmp) echo \"Moving $filename to picture directory\" mv \"$file\" \"$Result_picture\" ;; .mp4| .avi| .mkv| .wmv| .flv) echo \"Moving $filename to video directory\" mv \"$file\" \"$Result_video\" ;; .pdf| .doc| .docx| .txt| .rtf| .xls| .xlsx| .ppt| .pptx) echo \"Moving $filename to document directory\" mv \"$file\" \"$Result_documents\" ;; .mp3| .wav| .aac| .ogg) echo \"Moving $filename to music directory\" mv \"$file\" \"$Result_music\" ;; .zip| .rar| .tar) echo \"Moving $filename to archive directory\" mv \"$file\" \"$Result_archives\" ;; *) echo \"Something went wrong...\" esac fi done echo \"File sorting was successfully completed.\"","title":"FOR PRIMITIVE"},{"location":"auto_sorter_ru/auto_sorter_for_beg/#_1","text":"\u0414\u0430\u043d\u043d\u043e\u0435 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0430 \u0434\u043b\u044f \u0442\u0435\u0445 \u043b\u044e\u0434\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0445\u043e\u0442\u044f\u0442 \u0440\u0430\u0437\u043e\u0431\u0440\u0430\u0442\u044c\u0441\u044f \u0441 \u043d\u0443\u043b\u044f \u0432 \u043c\u043e\u0435\u043c \u0441\u043a\u0440\u0438\u043f\u0442\u0435. \u0420\u0430\u0437\u0431\u043e\u0440 \u0431\u0443\u0434\u0435\u0442 \u043e\u0447\u0435\u043d\u044c \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u044b\u043c, \u043f\u0440\u043e\u0441\u0442\u044b\u043c (\u0442\u0435\u0440\u043c\u0438\u043d\u044b \u0438 \u0434\u0440. \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u0441\u043b\u043e\u0432\u0430 \u0431\u0443\u0434\u0443\u0442 \u043e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u044b \u041d\u0415 \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u043c \u044f\u0437\u044b\u043a\u043e\u043c). ==\u0412\u0410\u0416\u041d\u041e!== \u0415\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043a\u0440\u0430\u0442\u043a\u043e \u0438 \u0431\u044b\u0441\u0442\u0440\u043e \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u043f\u0435\u0440\u0435\u0439\u0434\u0438\u0442\u0435 \u0432 \u0440\u0430\u0437\u0434\u0435\u043b \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u0434\u043b\u044f \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432 ( (\u0438\u043c\u0435\u0439\u0442\u0435 \u0432 \u0432\u0438\u0434\u0443, \u0442\u0435\u0440\u043c\u0438\u043d\u044b \u0438 \u0434\u0440\u0443\u0433\u0438\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043d\u0435 \u0431\u0443\u0434\u0443\u0442 \u043e\u0431\u044a\u044f\u0441\u043d\u044f\u0442\u044c\u0441\u044f \u0442\u0430\u043a \u0436\u0435, \u043a\u0430\u043a \u0438 \u0432 \u044d\u0442\u043e\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438. \u0415\u0441\u043b\u0438 \u0432\u044b \u043d\u0435 \u0443\u0432\u0435\u0440\u0435\u043d\u044b \u0432 \u0441\u0432\u043e\u0438\u0445 \u0441\u0438\u043b\u0430\u0445 \u0438 \u043d\u0430\u0432\u044b\u043a\u0430\u0445, \u0442\u043e \u0441\u043f\u0435\u0440\u0432\u0430 \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u044d\u0442\u0443 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e).","title":"\u0414\u043b\u044f \u043a\u043e\u0433\u043e \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0430 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f?"},{"location":"auto_sorter_ru/auto_sorter_for_beg/#_2","text":"\u0421\u043a\u0440\u0438\u043f\u0442 \u0441\u043b\u0443\u0436\u0438\u0442 \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0444\u0430\u0439\u043b\u043e\u0432 \u0440\u0430\u0437\u043d\u044b\u0445 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0439 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0438\u043c \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438.","title":"\u0427\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442 \u0441\u043a\u0440\u0438\u043f\u0442?"},{"location":"auto_sorter_ru/auto_sorter_for_beg/#_3","text":"\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0443\u0442\u0435\u0439 - \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u044e\u0442\u0441\u044f \u0438\u0441\u0445\u043e\u0434\u043d\u0430\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f (Source_dir) \u0438 \u0446\u0435\u043b\u0435\u0432\u044b\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u0434\u043b\u044f \u0440\u0430\u0437\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0432 \u0444\u0430\u0439\u043b\u043e\u0432 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0439 - \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442\u0441\u044f \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043e\u0432\u0430\u043d\u0438\u0435 \u0446\u0435\u043b\u0435\u0432\u044b\u0445 \u043f\u0430\u043f\u043e\u043a, \u043f\u0440\u0438 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0438 - \u0441\u043e\u0437\u0434\u0430\u044e\u0442\u0441\u044f \u0426\u0438\u043a\u043b \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0444\u0430\u0439\u043b\u043e\u0432 - \u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0432 \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438:- \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430 \u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u043f\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u0442\u0438\u043f\u0430\u043c: \u0418\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f (.jpg, .jpeg, .png, .gif, .bmp) \u0412\u0438\u0434\u0435\u043e (.mp4, .avi, .mkv, .wmv, .flv) \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b (.pdf, .doc, .docx, .txt, .rtf, .xls, .xlsx, .ppt, .pptx) \u0410\u0443\u0434\u0438\u043e (.mp3, .wav, .aac, .ogg) \u0410\u0440\u0445\u0438\u0432\u044b (.zip, .rar, .tar) ==\u0424\u0430\u0439\u043b\u044b \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0430\u044e\u0442\u0441\u044f \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0446\u0435\u043b\u0435\u0432\u044b\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438== \u0417\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0435 - \u0412\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u043c \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0438 \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0438","title":"\u041b\u043e\u0433\u0438\u043a\u0430 \u0441\u043a\u0440\u0438\u043f\u0442\u0430"},{"location":"auto_sorter_ru/auto_sorter_for_beg/#_4","text":"\u0421\u043a\u0440\u0438\u043f\u0442 \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d \u0434\u043b\u044f: * **Linux * MacOS \u0421\u0442\u043e\u0438\u0442 \u0441\u043a\u0430\u0437\u0430\u0442\u044c, \u0447\u0442\u043e \u043a\u043e\u0434, \u043c\u0435\u0436\u0434\u0443 \u044d\u0442\u0438\u043c\u0438 \u0434\u0432\u0443\u043c\u044f \u041e\u0421, \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u043b\u0438\u0447\u0430\u0442\u044c\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0443\u0442\u044f\u043c\u0438. \u0414\u043b\u044f \u043d\u0430\u0447\u0430\u043b\u043e \u0441\u0434\u0435\u043b\u0430\u0435\u043c \u0440\u0430\u0437\u0431\u043e\u0440 \u0434\u043b\u044f Linux, \u043f\u043e\u0441\u043b\u0435 \u0443\u0436\u0435 \u0434\u043b\u044f MacOS.","title":"\u0421\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u044c \u0441\u0438\u0441\u0442\u0435\u043c"},{"location":"auto_sorter_ru/auto_sorter_for_beg/#linux","text":"","title":"\u041a\u043e\u0434 \u0434\u043b\u044f Linux \u0441\u0438\u0441\u0442\u0435\u043c:"},{"location":"auto_sorter_ru/auto_sorter_for_beg/#binbash","text":"Source_dir=\"/home/username/Downloads\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_picture=\"/home/username/picture\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_video=\"/home/username/video\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_music=\"/home/username/music\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_documents=\"/home/username/documents\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_archives=\"/home/username/archives\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! echo \"Creating directories\" mkdir -p \"$Result_picture\" \"$Result_video\" \"$Result_documents\" \"$Result_music\" \"$Result_archives\" sleep 1 for file in \"$Source_dir\"/*; do if [ -f \"$file\" ]; then filename=$(basename \"$file\") case \"$filename\" in .jpg| .jpeg| .png| .gif| .bmp) echo \"Moving $filename to picture directory\" mv \"$file\" \"$Result_picture\" ;; .mp4| .avi| .mkv| .wmv| .flv) echo \"Moving $filename to video directory\" mv \"$file\" \"$Result_video\" ;; .pdf| .doc| .docx| .txt| .rtf| .xls| .xlsx| .ppt| .pptx) echo \"Moving $filename to document directory\" mv \"$file\" \"$Result_documents\" ;; .mp3| .wav| .aac| .ogg) echo \"Moving $filename to music directory\" mv \"$file\" \"$Result_music\" ;; .zip| .rar| .tar) echo \"Moving $filename to archive directory\" mv \"$file\" \"$Result_archives\" ;; *) echo \"Something went wrong...\" esac fi done echo \"File sorting was successfully completed.\"","title":"!/bin/bash"},{"location":"auto_sorter_ru/auto_sorter_for_beg/#_5","text":"","title":"\u041f\u043e\u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0439 \u0440\u0430\u0437\u0431\u043e\u0440"},{"location":"auto_sorter_ru/auto_sorter_for_beg/#shebang-","text":"shebang - \u044d\u0442\u043e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0442\u043e\u0440\u0430 \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0441\u043a\u0440\u0438\u043f\u0442\u0430. \u0413\u0440\u0443\u0431\u043e \u0433\u043e\u0432\u043e\u0440\u044f, \u043c\u044b \u0433\u043e\u0432\u043e\u0440\u0438\u043c \u0441\u0438\u0441\u0442\u0435\u043c\u0435 \u0447\u0442\u043e \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0442\u043e\u0440 \u0431\u0443\u0434\u0435\u0442 \u0447\u0438\u0442\u0430\u0442\u044c Bash \u0441\u043a\u0440\u0438\u043f\u0442.","title":"Shebang (\u0448\u0435\u0431\u0430\u043d\u0433) - \u0447\u0442\u043e \u044d\u0442\u043e?"},{"location":"auto_sorter_ru/auto_sorter_for_beg/#binbash_1","text":"","title":"!/bin/bash"},{"location":"auto_sorter_ru/auto_sorter_for_beg/#_6","text":"\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u0446\u0435\u043b\u0435\u0432\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e Source_dir \u0438 \u043e\u0431\u044a\u044f\u0432\u043b\u044f\u0435\u043c \u0435\u0451 \u043a\u0430\u043a \u043f\u0443\u0442\u044c \u043a \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 Downloads. Source_dir=\"/home/username/Downloads\" \u0418\u043c\u0435\u043d\u043d\u043e \u0438\u0437 \u044d\u0442\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u044b \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0431\u0440\u0430\u0442\u044c \u0444\u0430\u0439\u043b\u044b \u0438 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0442\u044c \u0438\u0445 \u043f\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f\u043c: 1. \u0426\u0435\u043b\u0435\u0432\u0430\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f picture \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u044b Result_picture. 2. \u0426\u0435\u043b\u0435\u0432\u0430\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f video \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u044b Result_video. 3. \u0426\u0435\u043b\u0435\u0432\u0430\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f music \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u044b Result_music. 4. \u0426\u0435\u043b\u0435\u0432\u0430\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f documents \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u044b Result_documents. 5. \u0426\u0435\u043b\u0435\u0432\u0430\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f archives \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u044b Result_archives. \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0432\u044b \u0437\u0430\u0434\u0430\u0434\u0438\u0442\u0435\u0441\u044c \u0432\u043e\u043f\u0440\u043e\u0441\u043e\u043c, \u0430 \u0447\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0435\u0441\u043b\u0438 \u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0435 \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u044d\u0442\u0438\u0445 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0439, \u0435\u043c\u0443 \u0447\u0442\u043e, \u0441\u0430\u043c\u043e\u043c\u0443 \u043f\u0440\u0438\u0434\u0435\u0442\u0441\u044f \u0438\u0445 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u043f\u0435\u0440\u0435\u0434 \u043d\u0430\u0447\u0430\u043b\u043e\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u043c!? - \u0421\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u044f\u0432\u043d\u043e \u0446\u0435\u043b\u0435\u0432\u044b\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u0431\u0443\u0434\u0435\u0442 \u043d\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c, \u0430 \u0441\u043a\u0440\u0438\u043f\u0442, \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u043a\u043e\u043c\u0430\u043d\u0434\u0435: mkdir -p \"$Result_picture\" \"$Result_video\" \"$Result_documents\" \"$Result_music\" \"$Result_archives\" \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0435 \u0441\u043b\u043e\u0432\u043e mkdir \u0432 Bash (Bourne Again SHell) - \u044d\u0442\u043e \u043a\u043e\u043c\u0430\u043d\u0434\u0430, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0435. \u041f\u043e\u0441\u043b\u0435 \u043d\u0435\u0433\u043e \u0441\u0442\u043e\u0438\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 -p, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043b\u0443\u0436\u0438\u0442 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435\u043c \"\u043d\u0435\u0434\u043e\u0441\u0442\u0430\u044e\u0449\u0435\u0439\" \u0446\u0435\u043f\u043e\u0447\u043a\u0438 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0439. \u0425\u043e\u0442\u0435\u043b\u043e\u0441\u044c \u0431\u044b \u0435\u0449\u0435 \u0443\u043f\u043e\u043c\u044f\u043d\u0443\u0442\u044c \u0434\u0432\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b (echo, sleep) 1) \u043a\u043e\u043c\u0430\u043d\u0434\u0430 echo - \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0442\u0435\u043a\u0441\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442 \u0432 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b (\u0432 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 - \u044d\u0442\u043e Creating directories). 2) \u043a\u043e\u043c\u0430\u043d\u0434\u0430 sleep \u0434\u0435\u043b\u0430\u0435\u0442 \u043f\u0430\u0443\u0437\u0443 (\u043f\u0440\u0435\u043a\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0443) \u043d\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0435 (\u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435) \u0432\u0440\u0435\u043c\u044f, \u0432 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 - \u044d\u0442\u043e 1, \u043f\u043e\u0441\u043b\u0435 \u043f\u0440\u043e\u0439\u0434\u0435\u043d\u043d\u043e\u0433\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438, \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043e\u043f\u044f\u0442\u044c \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0434\u0430\u043b\u044c\u0448\u0435. \u0421\u043b\u0443\u0436\u0438\u0442 \u043e\u043d\u0430 \u043f\u0440\u043e\u0441\u0442\u043e \u0440\u0430\u0434\u0438 \u043d\u0435\u043a\u043e\u0433\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043c\u0430 \u0440\u0430\u0431\u043e\u0442\u044b \u0441\u0438\u0441\u0442\u0435\u043c\u044b.","title":"\u041b\u043e\u0433\u0438\u043a\u0430 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445"},{"location":"auto_sorter_ru/auto_sorter_for_beg/#_7","text":"for file in \"$Source_dir\"/*; do if [ -f \"$file\" ]; then filename=$(basename \"$file\") \u0417\u0434\u0435\u0441\u044c \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0426\u0438\u043a\u043b, \u0432 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 \u0438\u0445 \u0435\u0441\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0442\u0438\u043f\u043e\u0432, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 \u0446\u0438\u043a\u043b while, \u0438\u043b\u0438 \u0436\u0435 \u043a\u0430\u043a \u0432 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 for, \u043e\u043d\u0438 \u0441\u043b\u0443\u0436\u0430\u0442 \u0434\u0443\u0431\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0432 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043c\u044b \u0437\u0430\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c \u0446\u0438\u043a\u043b for \"\u043f\u0435\u0440\u0435\u0431\u0438\u0440\u0430\u0442\u044c\" \u0444\u0430\u0439\u043b\u044b \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438. \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0446\u0438\u043a\u043b file \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c \u0432\u0441\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 (*) \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 Downloads. \u041d\u0435 \u0437\u0430\u0431\u044b\u0432\u0430\u0435\u043c, \u0447\u0442\u043e \u0435\u0441\u0442\u044c \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u044c \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u0432 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043e\u043a \u0435\u0441\u0442\u044c \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0444\u0430\u0439\u043b\u044b, \u0430 \u0442\u0430\u043a \u0436\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438, \u043d\u043e \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0447\u0442\u043e\u0431\u044b \u0442\u043e\u043b\u044c\u043a\u043e \u0444\u0430\u0439\u043b\u044b \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043b\u0438\u0441\u044c \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u043c \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438, \u0441\u0434\u0435\u043b\u0430\u0435\u043c \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443: if [ -f \"$file\" ]; then filename=$(basename \"$file\") \u0412 \u044d\u0442\u043e\u043c \u0444\u0440\u0430\u0433\u043c\u0435\u043d\u0442\u0435 \u043a\u043e\u0434\u0430 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0443\u0441\u043b\u043e\u0432\u0438\u0435 if then, \u0432 bash \u0438\u0445 \u0435\u0441\u0442\u044c \u0442\u043e\u0436\u0435 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0442\u0438\u043f\u043e\u0432, \u043a\u0430\u043a \u0438 \u0441 \u0446\u0438\u043a\u043b\u0430\u043c\u0438, \u043d\u043e \u0437\u0430\u0442\u0440\u043e\u043d\u0435\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u044d\u0442\u043e\u0442. \u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0432 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 - \u044d\u0442\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043a\u0430\u043a\u043e\u0433\u043e \u043b\u0438\u0431\u043e \u0443\u0441\u043b\u043e\u0432\u0438\u044f, \u043e\u043d\u043e \u043c\u043e\u0436\u0435\u0442 \u043b\u0438\u0431\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c\u0441\u044f (\u0432 bash \u0438\u0441\u0442\u0438\u043d\u0443 \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0430\u044e\u0442 \u043a\u0430\u043a 0), \u043b\u0438\u0431\u043e \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c\u0441\u044f (\u0432 \u0442\u043e\u043c \u0436\u0435 bash \u043b\u043e\u0436\u044c \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0430\u044e\u0442 \u043a\u0430\u043a 1). \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0443 -f \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0438\u0442\u0435\u0440\u0430\u0446\u0438\u044f \u0444\u0430\u0439\u043b\u043e\u043c, \u0435\u0441\u043b\u0438 \u044d\u0442\u043e \u0442\u0430\u043a, \u0442\u043e \u0442\u043e\u0433\u0434\u0430 \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e filename, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0445\u0440\u0430\u043d\u0438\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0435: $(basename \"$file\") \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0435 \u0441\u043b\u043e\u0432\u043e basename - \u043a\u043e\u043c\u0430\u043d\u0434\u0430, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0438\u0437\u0432\u043b\u0435\u043a\u0430\u0435\u0442 \u0438\u043c\u044f \u0444\u0430\u0439\u043b\u0430 (\u0432 \u0442\u043e\u043c \u0447\u0438\u0441\u043b\u0435 \u0438 \u0435\u0433\u043e \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435). \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0435\u0441\u043b\u0438 \u0446\u0438\u043a\u043b \u043d\u0430\u0439\u0434\u0435\u0442 \u0432 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 Downloads \u0444\u0430\u0439\u043b testfile.png, \u0442\u043e \u0443 filename \u0431\u0443\u0434\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043a\u0430\u043a testfile.png \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e.","title":"\u0426\u0438\u043a\u043b \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430"},{"location":"auto_sorter_ru/auto_sorter_for_beg/#case","text":"case (\u0438\u043b\u0438 \u0435\u0433\u043e \u0430\u043d\u0430\u043b\u043e\u0433 \u0432 \u0434\u0440\u0443\u0433\u0438\u0445 \u044f\u0437\u044b\u043a\u0430\u0445 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f - switch case) - \u044d\u0442\u043e \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f \u0432 Bash, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0443\u043f\u0440\u043e\u0449\u0430\u0435\u0442 \u0447\u0442\u0435\u043d\u0438\u0435 \u043a\u043e\u0434\u0430, \u0434\u0435\u043b\u0430\u0435\u0442 \u0435\u0433\u043e \u0431\u043e\u043b\u0435\u0435 \u043b\u0430\u043a\u043e\u043d\u0438\u0447\u043d\u044b\u043c \u0438 \u0443\u0434\u043e\u0431\u043d\u044b\u043c \u0438\u0437-\u0437\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u044f \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0430 \u0443\u0441\u043b\u043e\u0432\u0438\u0439 \u0432 \u043e\u0434\u043d\u043e\u043c \u0431\u043b\u043e\u043a\u0435. \u041f\u0440\u043e\u0441\u0442\u044b\u043c\u0438 \u0441\u043b\u043e\u0432\u0430\u043c\u0438, case - \u044d\u0442\u043e \u0442\u043e\u0436\u0435 \u0441\u0430\u043c\u043e\u0435 \u0447\u0442\u043e \u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u043f\u043e \u0442\u0438\u043f\u0443 if then, \u0442\u043e\u043b\u044c\u043a\u043e \u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0430\u044f \u0434\u043b\u044f \u0431\u043e\u043b\u044c\u0448\u0438\u0445 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0443\u0441\u043b\u043e\u0432\u0438\u0439 (\u043a\u0430\u043a \u0432 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440). \u0412\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u043e\u043d\u0430 \u0442\u0430\u043a: case \"$filename\" in .jpg| .jpeg| .png| .gif| .bmp) echo \"Moving $filename to picture directory\" mv \"$file\" \"$Result_picture\" ;; .mp4| .avi| .mkv| .wmv| .flv) echo \"Moving $filename to video directory\" mv \"$file\" \"$Result_video\" ;; .pdf| .doc| .docx| .txt| .rtf| .xls| .xlsx| .ppt| .pptx) echo \"Moving $filename to document directory\" mv \"$file\" \"$Result_documents\" ;; .mp3| .wav| .aac| .ogg) echo \"Moving $filename to music directory\" mv \"$file\" \"$Result_music\" ;; .zip| .rar| .tar) echo \"Moving $filename to archive directory\" mv \"$file\" \"$Result_archives\" ;; *) echo \"Something went wrong...\" esac \u0432 \u0441\u0430\u043c\u043e\u0439 \u0432\u0435\u0440\u0445\u043d\u0435\u0439 \u0447\u0430\u0441\u0442\u0438 \u043a\u043e\u0434\u0430 \u043c\u044b \u0441\u0442\u0430\u0432\u0438\u043c \u043d\u0435\u043a\u043e\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u0435: \"\u0415\u0441\u043b\u0438 filename \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432 \u0441\u0432\u043e\u0435\u043c \u0438\u043c\u0435\u043d\u0438 \u043a\u0430\u043a\u043e\u0439 \u043b\u0438\u0431\u043e \u0438\u0437 \u043d\u0438\u0436\u0435 \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0445 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0439 \u0444\u0430\u0439\u043b\u043e\u0432, \u0442\u043e \u0442\u043e\u0433\u0434\u0430 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0439 \u0432 \u0442\u0443 \u0446\u0435\u043b\u0435\u0432\u0443\u044e \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0435\u0451 \u0438 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442\". \u0421\u0442\u043e\u0438\u0442 \u0441\u043a\u0430\u0437\u0430\u0442\u044c \u0447\u0442\u043e \u0432 Bash \u0441\u0438\u043c\u0432\u043e\u043b * - \u044d\u0442\u043e \u043b\u044e\u0431\u043e\u0435 \u0438\u043c\u044f (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0432 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 - \u043b\u044e\u0431\u043e\u0435 \u0438\u043c\u044f \u0444\u0430\u0439\u043b\u0430). \u0421\u0438\u043c\u0432\u043e\u043b | \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442 \u0418\u041b\u0418, \u0442\u043e \u0435\u0441\u0442\u044c \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u0438 \u043d\u0430\u043c \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u043d\u043e \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435, \u0430 \u0441\u0440\u0430\u0437\u0443 \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e. \u0421\u0438\u043c\u0432\u043e\u043b ;; \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442 \u043a\u043e\u043d\u0435\u0446 \u043e\u0434\u043d\u043e\u0433\u043e \u0443\u0441\u043b\u043e\u0432\u0438\u044f. \u0421\u0438\u043c\u0432\u043e\u043b *) - \u044d\u0442\u043e \u043a\u043b. \u0441\u043b\u043e\u0432\u043e \u043f\u0440\u0438 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043c\u044b \u0434\u0430\u0435\u043c \u043f\u043e\u043d\u044f\u0442\u044c \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 case \u0447\u0442\u043e \u043c\u044b \u0431\u044b \u0445\u043e\u0442\u0435\u043b\u0438 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0443\u0441\u043b\u043e\u0432\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e (\u043e\u0431\u044b\u0447\u043d\u043e \u0435\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442 \u0434\u043b\u044f \u0432\u044b\u0432\u043e\u0434\u0430 \u043e\u0448\u0438\u0431\u043a\u0438, \u0435\u0441\u043b\u0438 \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043a\u0430\u043a \u0432 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u043d\u0438 \u043e\u0434\u043d\u043e \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430 \u043d\u0435 \u0441\u043e\u0432\u043f\u0430\u043b\u043e \u0441 \u0442\u0435\u043c, \u0447\u0442\u043e \u043c\u044b \u043d\u0430\u043f\u0438\u0441\u0430\u043b\u0438 \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445). esac - \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0435 \u0441\u043b\u043e\u0432\u043e, \u043f\u0440\u0438 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043c\u044b \u0434\u0430\u0435\u043c \u043f\u043e\u043d\u044f\u0442\u044c \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 case \u0447\u0442\u043e \u043c\u044b \u0445\u043e\u0442\u0438\u043c \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u0442\u044c \u0446\u0435\u043b\u044b\u0439 \u0431\u043b\u043e\u043a \u0443\u0441\u043b\u043e\u0432\u0438\u0439. fi - \u044d\u0442\u043e \u043a\u043e\u043d\u0435\u0446 \u0443\u0441\u043b\u043e\u0432\u0438\u044f (\u0442\u043e\u0433\u043e \u0441\u0430\u043c\u043e\u0433\u043e, \u0447\u0442\u043e \u0431\u044b\u043b \u0435\u0449\u0435 \u043d\u0430\u0434 case). done - \u044d\u0442\u043e \u043a\u043e\u043d\u0435\u0446 \u0446\u0438\u043a\u043b\u0430 (\u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u043d\u0430\u0434 \u0443\u0441\u043b\u043e\u0432\u0438\u0435\u043c if then). \u043a\u043e\u043d\u0435\u0447\u043d\u044b\u0439 echo \u0433\u043e\u0432\u043e\u0440\u0438\u0442 \u043d\u0430\u043c \u043e \u0442\u043e\u043c, \u0447\u0442\u043e \u0432\u0441\u0435 \u043f\u0440\u043e\u0448\u043b\u043e \u0445\u043e\u0440\u043e\u0448\u043e, \u0438 \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0444\u0430\u0439\u043b\u0430 \u043f\u0440\u043e\u0448\u043b\u043e \u0443\u0441\u043f\u0435\u0448\u043d\u043e.","title":"\u041a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f case"},{"location":"auto_sorter_ru/auto_sorter_for_beg/#macos","text":"","title":"\u041a\u043e\u0434 \u0434\u043b\u044f MacOS \u0441\u0438\u0441\u0442\u0435\u043c:"},{"location":"auto_sorter_ru/auto_sorter_for_beg/#binbash_2","text":"Source_dir=\"/Users/username/Downloads\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_picture=\"/Users/username/picture\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_video=\"/Users/username/video\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_music=\"/Users/username/music\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_documents=\"/Users/username/documents\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_archives=\"/Users/username/archives\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! echo \"Creating directories\" mkdir -p \"$Result_picture\" \"$Result_video\" \"$Result_documents\" \"$Result_music\" \"$Result_archives\" sleep 1 for file in \"$Source_dir\"/*; do if [ -f \"$file\" ]; then filename=$(basename \"$file\") case \"$filename\" in .jpg| .jpeg| .png| .gif| .bmp) echo \"Moving $filename to picture directory\" mv \"$file\" \"$Result_picture\" ;; .mp4| .avi| .mkv| .wmv| .flv) echo \"Moving $filename to video directory\" mv \"$file\" \"$Result_video\" ;; .pdf| .doc| .docx| .txt| .rtf| .xls| .xlsx| .ppt| .pptx) echo \"Moving $filename to document directory\" mv \"$file\" \"$Result_documents\" ;; .mp3| .wav| .aac| .ogg) echo \"Moving $filename to music directory\" mv \"$file\" \"$Result_music\" ;; .zip| .rar| .tar) echo \"Moving $filename to archive directory\" mv \"$file\" \"$Result_archives\" ;; *) echo \"Something went wrong...\" esac fi done echo \"File sorting was successfully completed.\"","title":"!/bin/bash"},{"location":"auto_sorter_ru/auto_sorter_for_dev/","text":"\u0414\u043b\u044f \u043a\u043e\u0433\u043e \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0430 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f? \u0414\u0430\u043d\u043d\u0430\u044f API \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043e \u0434\u043b\u044f \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0445\u043e\u0442\u044f\u0442 \u043f\u043e\u043d\u044f\u0442\u044c \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u0438 \u043b\u043e\u0433\u0438\u043a\u0443 \u0441\u043a\u0440\u0438\u043f\u0442\u0430 \u0434\u043b\u044f \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0439 \u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0438\u043b\u0438 \u0438\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u0438. \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0431\u0443\u0434\u0435\u0442 \u0442\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u043c, \u043d\u043e \u0441 \u043f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u044f\u043c\u0438 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0445 \u043c\u043e\u043c\u0435\u043d\u0442\u043e\u0432. ==\u0412\u0410\u0416\u041d\u041e!== \u0415\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0435 \u043e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u043d\u0430\u0447\u0438\u043d\u0430\u044e\u0449\u0438\u0445, \u043f\u0435\u0440\u0435\u0439\u0434\u0438\u0442\u0435 \u0432 \u0440\u0430\u0437\u0434\u0435\u043b \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u0434\u043b\u044f \u043d\u0430\u0447\u0438\u043d\u0430\u044e\u0449\u0438\u0445. \u0427\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442 \u0441\u043a\u0440\u0438\u043f\u0442? \u0421\u043a\u0440\u0438\u043f\u0442 \u0441\u043b\u0443\u0436\u0438\u0442 \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0444\u0430\u0439\u043b\u043e\u0432 \u0440\u0430\u0437\u043d\u044b\u0445 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0439 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0438\u043c \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438. \u041b\u043e\u0433\u0438\u043a\u0430 \u0441\u043a\u0440\u0438\u043f\u0442\u0430 \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0443\u0442\u0435\u0439 - \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u044e\u0442\u0441\u044f \u0438\u0441\u0445\u043e\u0434\u043d\u0430\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f ( Source_dir ) \u0438 \u0446\u0435\u043b\u0435\u0432\u044b\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u0434\u043b\u044f \u0440\u0430\u0437\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0432 \u0444\u0430\u0439\u043b\u043e\u0432 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0439 - \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442\u0441\u044f \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043e\u0432\u0430\u043d\u0438\u0435 \u0446\u0435\u043b\u0435\u0432\u044b\u0445 \u043f\u0430\u043f\u043e\u043a, \u043f\u0440\u0438 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0438 - \u0441\u043e\u0437\u0434\u0430\u044e\u0442\u0441\u044f \u0426\u0438\u043a\u043b \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0444\u0430\u0439\u043b\u043e\u0432 - \u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0432 \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438:- \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430 \u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u043f\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u0442\u0438\u043f\u0430\u043c: \u0418\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f (.jpg, .jpeg, .png, .gif, .bmp) \u0412\u0438\u0434\u0435\u043e (.mp4, .avi, .mkv, .wmv, .flv) \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b (.pdf, .doc, .docx, .txt, .rtf, .xls, .xlsx, .ppt, .pptx) \u0410\u0443\u0434\u0438\u043e (.mp3, .wav, .aac, .ogg) \u0410\u0440\u0445\u0438\u0432\u044b (.zip, .rar, .tar) ==\u0424\u0430\u0439\u043b\u044b \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0430\u044e\u0442\u0441\u044f \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0446\u0435\u043b\u0435\u0432\u044b\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438== \u0417\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0435 - \u0412\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u043c \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0438 \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0438 \u0421\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u044c \u0441\u0438\u0441\u0442\u0435\u043c \u0421\u043a\u0440\u0438\u043f\u0442 \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d \u0434\u043b\u044f: * Linux * MacOS** \u0421\u0442\u043e\u0438\u0442 \u0441\u043a\u0430\u0437\u0430\u0442\u044c, \u0447\u0442\u043e \u043a\u043e\u0434, \u043c\u0435\u0436\u0434\u0443 \u044d\u0442\u0438\u043c\u0438 \u0434\u0432\u0443\u043c\u044f \u041e\u0421, \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u043b\u0438\u0447\u0430\u0442\u044c\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0443\u0442\u044f\u043c\u0438. \u0414\u043b\u044f \u043d\u0430\u0447\u0430\u043b\u043e \u0441\u0434\u0435\u043b\u0430\u0435\u043c \u0440\u0430\u0437\u0431\u043e\u0440 \u0434\u043b\u044f Linux, \u043f\u043e\u0441\u043b\u0435 \u0443\u0436\u0435 \u0434\u043b\u044f MacOS. \u041a\u043e\u0434 \u0434\u043b\u044f Linux \u0441\u0438\u0441\u0442\u0435\u043c: #!/bin/bash Source_dir=\"/home/username/Downloads\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f \u0412\u041c\u0415\u0421\u0422\u041e `username`!!! Result_picture=\"/home/username/picture\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f \u0412\u041c\u0415\u0421\u0422\u041e `username`!!! Result_video=\"/home/username/video\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f \u0412\u041c\u0415\u0421\u0422\u041e `username`!!! Result_music=\"/home/username/music\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f \u0412\u041c\u0415\u0421\u0422\u041e `username`!!! Result_documents=\"/home/username/documents\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f \u0412\u041c\u0415\u0421\u0422\u041e `username`!!! Result_archives=\"/home/username/archives\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f \u0412\u041c\u0415\u0421\u0422\u041e `username`!!! echo \"Creating directories\" mkdir -p \"$Result_picture\" \"$Result_video\" \"$Result_documents\" \"$Result_music\" \"$Result_archives\" sleep 1 for file in \"$Source_dir\"/*; do if [ -f \"$file\" ]; then filename=$(basename \"$file\") case \"$filename\" in *.jpg|*.jpeg|*.png|*.gif|*.bmp) echo \"Moving $filename to picture directory\" mv \"$file\" \"$Result_picture\" ;; *.mp4|*.avi|*.mkv|*.wmv|*.flv) echo \"Moving $filename to video directory\" mv \"$file\" \"$Result_video\" ;; *.pdf|*.doc|*.docx|*.txt|*.rtf|*.xls|*.xlsx|*.ppt|*.pptx) echo \"Moving $filename to document directory\" mv \"$file\" \"$Result_documents\" ;; *.mp3|*.wav|*.aac|*.ogg) echo \"Moving $filename to music directory\" mv \"$file\" \"$Result_music\" ;; *.zip|*.rar|*.tar) echo \"Moving $filename to archive directory\" mv \"$file\" \"$Result_archives\" ;; *) echo \"Something went wrong...\" esac fi done echo \"File sorting was successfully completed.\" \u0410\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u0430 API (\u041f\u043e\u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0439 \u0440\u0430\u0437\u0431\u043e\u0440) \u041b\u043e\u0433\u0438\u043a\u0430 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u0446\u0435\u043b\u0435\u0432\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e Source_dir \u0438 \u043e\u0431\u044a\u044f\u0432\u043b\u044f\u0435\u043c \u0435\u0451 \u043a\u0430\u043a \u043f\u0443\u0442\u044c \u043a \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 Downloads . Source_dir=\"/home/username/Downloads\" \u0418\u043c\u0435\u043d\u043d\u043e \u0438\u0437 \u044d\u0442\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u044b \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0431\u0440\u0430\u0442\u044c \u0444\u0430\u0439\u043b\u044b \u0438 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0442\u044c \u0438\u0445 \u043f\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f\u043c: 1. \u0426\u0435\u043b\u0435\u0432\u0430\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f picture - \u043f\u0440\u0438\u0435\u043c\u043d\u0438\u043a \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439 2. \u0426\u0435\u043b\u0435\u0432\u0430\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f video - \u043f\u0440\u0438\u0435\u043c\u043d\u0438\u043a \u0432\u0438\u0434\u0435\u043e 3. \u0426\u0435\u043b\u0435\u0432\u0430\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f music - \u043f\u0440\u0438\u0435\u043c\u043d\u0438\u043a \u0430\u0443\u0434\u0438\u043e 4. \u0426\u0435\u043b\u0435\u0432\u0430\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f documents - \u043f\u0440\u0438\u0435\u043c\u043d\u0438\u043a \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 5. \u0426\u0435\u043b\u0435\u0432\u0430\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f archives - \u043f\u0440\u0438\u0435\u043c\u043d\u0438\u043a \u0430\u0440\u0445\u0438\u0432\u043e\u0432 \u041a\u043e\u043c\u0430\u043d\u0434\u0430 mkdir -p mkdir -p \"$Result_picture\" \"$Result_video\" \"$Result_documents\" \"$Result_music\" \"$Result_archives\" \u041d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435: \u0420\u0435\u043a\u0443\u0440\u0441\u0438\u0432\u043d\u043e\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0439 \u043f\u043e \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c. \u0424\u043b\u0430\u0433: -p - \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0446\u0435\u043f\u043e\u0447\u043a\u0438 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0439. \u0426\u0438\u043a\u043b \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0426\u0438\u043a\u043b: for file in \"$Source_dir\"/* for file in \"$Source_dir\"/*; do \u041d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435: \u043f\u0435\u0440\u0435\u0431\u043e\u0440 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u0423\u0441\u043b\u043e\u0432\u0438\u0435: if [ -f \"$file\" ] if [ -f \"$file\" ]; then \u0422\u0438\u043f: \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0442\u0438\u043f\u0430 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0424\u043b\u0430\u0433: -f - \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u0444\u0430\u0439\u043b \u0412\u043e\u0437\u0432\u0440\u0430\u0442: boolean (0 - \u0444\u0430\u0439\u043b, 1 - \u043d\u0435 \u0444\u0430\u0439\u043b) \u0415\u0441\u043b\u0438 $file == 0, \u0432\u044b\u043f\u043e\u043b\u043d\u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0435: filename=$(basename \"$file\") \u0444\u0443\u043d\u043a\u0446\u0438\u044f basename : \u041d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435: \u0438\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u0435 \u0438\u043c\u0435\u043d\u0438 \u0444\u0430\u0439\u043b\u0430 \u0441 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435\u043c \u0412\u0445\u043e\u0434: \u043f\u043e\u043b\u043d\u044b\u0439 \u043f\u0443\u0442\u044c \u043a \u0444\u0430\u0439\u043b\u0443 \u0412\u044b\u0445\u043e\u0434: \u0438\u043c\u044f \u0444\u0430\u0439\u043b\u0430 \u0441 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435\u043c \u041a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f case \u0422\u0438\u043f: \u043c\u0443\u043b\u044c\u0442\u0438-\u0443\u0441\u043b\u043e\u0432\u043d\u044b\u0439 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 \u041d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435: \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0438\u0437\u0430\u0446\u0438\u044f \u0444\u0430\u0439\u043b\u043e\u0432 \u043f\u043e \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f\u043c case \"$filename\" in *.jpg|*.jpeg|*.png|*.gif|*.bmp) echo \"Moving $filename to picture directory\" mv \"$file\" \"$Result_picture\" ;; *.mp4|*.avi|*.mkv|*.wmv|*.flv) echo \"Moving $filename to video directory\" mv \"$file\" \"$Result_video\" ;; *.pdf|*.doc|*.docx|*.txt|*.rtf|*.xls|*.xlsx|*.ppt|*.pptx) echo \"Moving $filename to document directory\" mv \"$file\" \"$Result_documents\" ;; *.mp3|*.wav|*.aac|*.ogg) echo \"Moving $filename to music directory\" mv \"$file\" \"$Result_music\" ;; *.zip|*.rar|*.tar) echo \"Moving $filename to archive directory\" mv \"$file\" \"$Result_archives\" ;; *) echo \"Something went wrong...\" esac \u041a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f: \u0418\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f (.jpg, .jpeg, .png, .gif, .bmp) \u0412\u0438\u0434\u0435\u043e (.mp4, .avi, .mkv, .wmv, .flv) \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b (.pdf, .doc, .docx, .txt, .rtf, .xls, .xlsx, .ppt, .pptx) \u0410\u0443\u0434\u0438\u043e (.mp3, .wav, .aac, .ogg) \u0410\u0440\u0445\u0438\u0432\u044b (.zip, .rar, .tar) \u041a\u043e\u0434 \u0434\u043b\u044f MacOS \u0441\u0438\u0441\u0442\u0435\u043c: #!/bin/bash Source_dir=\"/Users/username/Downloads\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_picture=\"/Users/username/picture\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_video=\"/Users/username/video\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_music=\"/Users/username/music\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_documents=\"/Users/username/documents\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_archives=\"/Users/username/archives\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! echo \"Creating directories\" mkdir -p \"$Result_picture\" \"$Result_video\" \"$Result_documents\" \"$Result_music\" \"$Result_archives\" sleep 1 for file in \"$Source_dir\"/*; do if [ -f \"$file\" ]; then filename=$(basename \"$file\") case \"$filename\" in *.jpg|*.jpeg|*.png|*.gif|*.bmp) echo \"Moving $filename to picture directory\" mv \"$file\" \"$Result_picture\" ;; *.mp4|*.avi|*.mkv|*.wmv|*.flv) echo \"Moving $filename to video directory\" mv \"$file\" \"$Result_video\" ;; *.pdf|*.doc|*.docx|*.txt|*.rtf|*.xls|*.xlsx|*.ppt|*.pptx) echo \"Moving $filename to document directory\" mv \"$file\" \"$Result_documents\" ;; *.mp3|*.wav|*.aac|*.ogg) echo \"Moving $filename to music directory\" mv \"$file\" \"$Result_music\" ;; *.zip|*.rar|*.tar) echo \"Moving $filename to archive directory\" mv \"$file\" \"$Result_archives\" ;; *) echo \"Something went wrong...\" esac fi done echo \"File sorting was successfully completed.\" \u043c\u043e\u0436\u0435\u0448\u044c \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u044d\u0442\u0443 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u043d\u0430 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u043c \u0442\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u043e\u043c","title":"FOR ADVANCED"},{"location":"auto_sorter_ru/auto_sorter_for_dev/#_1","text":"\u0414\u0430\u043d\u043d\u0430\u044f API \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043e \u0434\u043b\u044f \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0445\u043e\u0442\u044f\u0442 \u043f\u043e\u043d\u044f\u0442\u044c \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u0438 \u043b\u043e\u0433\u0438\u043a\u0443 \u0441\u043a\u0440\u0438\u043f\u0442\u0430 \u0434\u043b\u044f \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0439 \u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0438\u043b\u0438 \u0438\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u0438. \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0431\u0443\u0434\u0435\u0442 \u0442\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u043c, \u043d\u043e \u0441 \u043f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u044f\u043c\u0438 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0445 \u043c\u043e\u043c\u0435\u043d\u0442\u043e\u0432. ==\u0412\u0410\u0416\u041d\u041e!== \u0415\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0435 \u043e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u043d\u0430\u0447\u0438\u043d\u0430\u044e\u0449\u0438\u0445, \u043f\u0435\u0440\u0435\u0439\u0434\u0438\u0442\u0435 \u0432 \u0440\u0430\u0437\u0434\u0435\u043b \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u0434\u043b\u044f \u043d\u0430\u0447\u0438\u043d\u0430\u044e\u0449\u0438\u0445.","title":"\u0414\u043b\u044f \u043a\u043e\u0433\u043e \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0430 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f?"},{"location":"auto_sorter_ru/auto_sorter_for_dev/#_2","text":"\u0421\u043a\u0440\u0438\u043f\u0442 \u0441\u043b\u0443\u0436\u0438\u0442 \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0444\u0430\u0439\u043b\u043e\u0432 \u0440\u0430\u0437\u043d\u044b\u0445 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0439 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0438\u043c \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438.","title":"\u0427\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442 \u0441\u043a\u0440\u0438\u043f\u0442?"},{"location":"auto_sorter_ru/auto_sorter_for_dev/#_3","text":"\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0443\u0442\u0435\u0439 - \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u044e\u0442\u0441\u044f \u0438\u0441\u0445\u043e\u0434\u043d\u0430\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f ( Source_dir ) \u0438 \u0446\u0435\u043b\u0435\u0432\u044b\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u0434\u043b\u044f \u0440\u0430\u0437\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0432 \u0444\u0430\u0439\u043b\u043e\u0432 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0439 - \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442\u0441\u044f \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043e\u0432\u0430\u043d\u0438\u0435 \u0446\u0435\u043b\u0435\u0432\u044b\u0445 \u043f\u0430\u043f\u043e\u043a, \u043f\u0440\u0438 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0438 - \u0441\u043e\u0437\u0434\u0430\u044e\u0442\u0441\u044f \u0426\u0438\u043a\u043b \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0444\u0430\u0439\u043b\u043e\u0432 - \u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0432 \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438:- \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430 \u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u043f\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u0442\u0438\u043f\u0430\u043c: \u0418\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f (.jpg, .jpeg, .png, .gif, .bmp) \u0412\u0438\u0434\u0435\u043e (.mp4, .avi, .mkv, .wmv, .flv) \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b (.pdf, .doc, .docx, .txt, .rtf, .xls, .xlsx, .ppt, .pptx) \u0410\u0443\u0434\u0438\u043e (.mp3, .wav, .aac, .ogg) \u0410\u0440\u0445\u0438\u0432\u044b (.zip, .rar, .tar) ==\u0424\u0430\u0439\u043b\u044b \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0430\u044e\u0442\u0441\u044f \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0446\u0435\u043b\u0435\u0432\u044b\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438== \u0417\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0435 - \u0412\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u043c \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0438 \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0438","title":"\u041b\u043e\u0433\u0438\u043a\u0430 \u0441\u043a\u0440\u0438\u043f\u0442\u0430"},{"location":"auto_sorter_ru/auto_sorter_for_dev/#_4","text":"\u0421\u043a\u0440\u0438\u043f\u0442 \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d \u0434\u043b\u044f: * Linux * MacOS** \u0421\u0442\u043e\u0438\u0442 \u0441\u043a\u0430\u0437\u0430\u0442\u044c, \u0447\u0442\u043e \u043a\u043e\u0434, \u043c\u0435\u0436\u0434\u0443 \u044d\u0442\u0438\u043c\u0438 \u0434\u0432\u0443\u043c\u044f \u041e\u0421, \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u043b\u0438\u0447\u0430\u0442\u044c\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0443\u0442\u044f\u043c\u0438. \u0414\u043b\u044f \u043d\u0430\u0447\u0430\u043b\u043e \u0441\u0434\u0435\u043b\u0430\u0435\u043c \u0440\u0430\u0437\u0431\u043e\u0440 \u0434\u043b\u044f Linux, \u043f\u043e\u0441\u043b\u0435 \u0443\u0436\u0435 \u0434\u043b\u044f MacOS.","title":"\u0421\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u044c \u0441\u0438\u0441\u0442\u0435\u043c"},{"location":"auto_sorter_ru/auto_sorter_for_dev/#linux","text":"#!/bin/bash Source_dir=\"/home/username/Downloads\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f \u0412\u041c\u0415\u0421\u0422\u041e `username`!!! Result_picture=\"/home/username/picture\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f \u0412\u041c\u0415\u0421\u0422\u041e `username`!!! Result_video=\"/home/username/video\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f \u0412\u041c\u0415\u0421\u0422\u041e `username`!!! Result_music=\"/home/username/music\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f \u0412\u041c\u0415\u0421\u0422\u041e `username`!!! Result_documents=\"/home/username/documents\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f \u0412\u041c\u0415\u0421\u0422\u041e `username`!!! Result_archives=\"/home/username/archives\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f \u0412\u041c\u0415\u0421\u0422\u041e `username`!!! echo \"Creating directories\" mkdir -p \"$Result_picture\" \"$Result_video\" \"$Result_documents\" \"$Result_music\" \"$Result_archives\" sleep 1 for file in \"$Source_dir\"/*; do if [ -f \"$file\" ]; then filename=$(basename \"$file\") case \"$filename\" in *.jpg|*.jpeg|*.png|*.gif|*.bmp) echo \"Moving $filename to picture directory\" mv \"$file\" \"$Result_picture\" ;; *.mp4|*.avi|*.mkv|*.wmv|*.flv) echo \"Moving $filename to video directory\" mv \"$file\" \"$Result_video\" ;; *.pdf|*.doc|*.docx|*.txt|*.rtf|*.xls|*.xlsx|*.ppt|*.pptx) echo \"Moving $filename to document directory\" mv \"$file\" \"$Result_documents\" ;; *.mp3|*.wav|*.aac|*.ogg) echo \"Moving $filename to music directory\" mv \"$file\" \"$Result_music\" ;; *.zip|*.rar|*.tar) echo \"Moving $filename to archive directory\" mv \"$file\" \"$Result_archives\" ;; *) echo \"Something went wrong...\" esac fi done echo \"File sorting was successfully completed.\"","title":"\u041a\u043e\u0434 \u0434\u043b\u044f Linux \u0441\u0438\u0441\u0442\u0435\u043c:"},{"location":"auto_sorter_ru/auto_sorter_for_dev/#api","text":"","title":"\u0410\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u0430 API (\u041f\u043e\u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0439 \u0440\u0430\u0437\u0431\u043e\u0440)"},{"location":"auto_sorter_ru/auto_sorter_for_dev/#_5","text":"\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u0446\u0435\u043b\u0435\u0432\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e Source_dir \u0438 \u043e\u0431\u044a\u044f\u0432\u043b\u044f\u0435\u043c \u0435\u0451 \u043a\u0430\u043a \u043f\u0443\u0442\u044c \u043a \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 Downloads . Source_dir=\"/home/username/Downloads\" \u0418\u043c\u0435\u043d\u043d\u043e \u0438\u0437 \u044d\u0442\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u044b \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0431\u0440\u0430\u0442\u044c \u0444\u0430\u0439\u043b\u044b \u0438 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0442\u044c \u0438\u0445 \u043f\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f\u043c: 1. \u0426\u0435\u043b\u0435\u0432\u0430\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f picture - \u043f\u0440\u0438\u0435\u043c\u043d\u0438\u043a \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439 2. \u0426\u0435\u043b\u0435\u0432\u0430\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f video - \u043f\u0440\u0438\u0435\u043c\u043d\u0438\u043a \u0432\u0438\u0434\u0435\u043e 3. \u0426\u0435\u043b\u0435\u0432\u0430\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f music - \u043f\u0440\u0438\u0435\u043c\u043d\u0438\u043a \u0430\u0443\u0434\u0438\u043e 4. \u0426\u0435\u043b\u0435\u0432\u0430\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f documents - \u043f\u0440\u0438\u0435\u043c\u043d\u0438\u043a \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 5. \u0426\u0435\u043b\u0435\u0432\u0430\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f archives - \u043f\u0440\u0438\u0435\u043c\u043d\u0438\u043a \u0430\u0440\u0445\u0438\u0432\u043e\u0432","title":"\u041b\u043e\u0433\u0438\u043a\u0430 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445"},{"location":"auto_sorter_ru/auto_sorter_for_dev/#mkdir-p","text":"mkdir -p \"$Result_picture\" \"$Result_video\" \"$Result_documents\" \"$Result_music\" \"$Result_archives\" \u041d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435: \u0420\u0435\u043a\u0443\u0440\u0441\u0438\u0432\u043d\u043e\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0439 \u043f\u043e \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c. \u0424\u043b\u0430\u0433: -p - \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0446\u0435\u043f\u043e\u0447\u043a\u0438 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0439.","title":"\u041a\u043e\u043c\u0430\u043d\u0434\u0430 mkdir -p"},{"location":"auto_sorter_ru/auto_sorter_for_dev/#_6","text":"","title":"\u0426\u0438\u043a\u043b \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430"},{"location":"auto_sorter_ru/auto_sorter_for_dev/#for-file-in-source_dir","text":"for file in \"$Source_dir\"/*; do \u041d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435: \u043f\u0435\u0440\u0435\u0431\u043e\u0440 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438","title":"\u0426\u0438\u043a\u043b: for file in \"$Source_dir\"/*"},{"location":"auto_sorter_ru/auto_sorter_for_dev/#if-f-file","text":"if [ -f \"$file\" ]; then \u0422\u0438\u043f: \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0442\u0438\u043f\u0430 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0424\u043b\u0430\u0433: -f - \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u0444\u0430\u0439\u043b \u0412\u043e\u0437\u0432\u0440\u0430\u0442: boolean (0 - \u0444\u0430\u0439\u043b, 1 - \u043d\u0435 \u0444\u0430\u0439\u043b) \u0415\u0441\u043b\u0438 $file == 0, \u0432\u044b\u043f\u043e\u043b\u043d\u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0435: filename=$(basename \"$file\")","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435: if [ -f \"$file\" ]"},{"location":"auto_sorter_ru/auto_sorter_for_dev/#basename","text":"\u041d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435: \u0438\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u0435 \u0438\u043c\u0435\u043d\u0438 \u0444\u0430\u0439\u043b\u0430 \u0441 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435\u043c \u0412\u0445\u043e\u0434: \u043f\u043e\u043b\u043d\u044b\u0439 \u043f\u0443\u0442\u044c \u043a \u0444\u0430\u0439\u043b\u0443 \u0412\u044b\u0445\u043e\u0434: \u0438\u043c\u044f \u0444\u0430\u0439\u043b\u0430 \u0441 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435\u043c","title":"\u0444\u0443\u043d\u043a\u0446\u0438\u044f basename:"},{"location":"auto_sorter_ru/auto_sorter_for_dev/#case","text":"\u0422\u0438\u043f: \u043c\u0443\u043b\u044c\u0442\u0438-\u0443\u0441\u043b\u043e\u0432\u043d\u044b\u0439 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 \u041d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435: \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0438\u0437\u0430\u0446\u0438\u044f \u0444\u0430\u0439\u043b\u043e\u0432 \u043f\u043e \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f\u043c case \"$filename\" in *.jpg|*.jpeg|*.png|*.gif|*.bmp) echo \"Moving $filename to picture directory\" mv \"$file\" \"$Result_picture\" ;; *.mp4|*.avi|*.mkv|*.wmv|*.flv) echo \"Moving $filename to video directory\" mv \"$file\" \"$Result_video\" ;; *.pdf|*.doc|*.docx|*.txt|*.rtf|*.xls|*.xlsx|*.ppt|*.pptx) echo \"Moving $filename to document directory\" mv \"$file\" \"$Result_documents\" ;; *.mp3|*.wav|*.aac|*.ogg) echo \"Moving $filename to music directory\" mv \"$file\" \"$Result_music\" ;; *.zip|*.rar|*.tar) echo \"Moving $filename to archive directory\" mv \"$file\" \"$Result_archives\" ;; *) echo \"Something went wrong...\" esac","title":"\u041a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f case"},{"location":"auto_sorter_ru/auto_sorter_for_dev/#_7","text":"\u0418\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f (.jpg, .jpeg, .png, .gif, .bmp) \u0412\u0438\u0434\u0435\u043e (.mp4, .avi, .mkv, .wmv, .flv) \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b (.pdf, .doc, .docx, .txt, .rtf, .xls, .xlsx, .ppt, .pptx) \u0410\u0443\u0434\u0438\u043e (.mp3, .wav, .aac, .ogg) \u0410\u0440\u0445\u0438\u0432\u044b (.zip, .rar, .tar)","title":"\u041a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f:"},{"location":"auto_sorter_ru/auto_sorter_for_dev/#macos","text":"#!/bin/bash Source_dir=\"/Users/username/Downloads\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_picture=\"/Users/username/picture\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_video=\"/Users/username/video\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_music=\"/Users/username/music\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_documents=\"/Users/username/documents\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! Result_archives=\"/Users/username/archives\" # \u041f\u041e\u0421\u0422\u0410\u0412\u042c \u0421\u0412\u041e\u0401 \u0418\u041c\u042f \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f!!! echo \"Creating directories\" mkdir -p \"$Result_picture\" \"$Result_video\" \"$Result_documents\" \"$Result_music\" \"$Result_archives\" sleep 1 for file in \"$Source_dir\"/*; do if [ -f \"$file\" ]; then filename=$(basename \"$file\") case \"$filename\" in *.jpg|*.jpeg|*.png|*.gif|*.bmp) echo \"Moving $filename to picture directory\" mv \"$file\" \"$Result_picture\" ;; *.mp4|*.avi|*.mkv|*.wmv|*.flv) echo \"Moving $filename to video directory\" mv \"$file\" \"$Result_video\" ;; *.pdf|*.doc|*.docx|*.txt|*.rtf|*.xls|*.xlsx|*.ppt|*.pptx) echo \"Moving $filename to document directory\" mv \"$file\" \"$Result_documents\" ;; *.mp3|*.wav|*.aac|*.ogg) echo \"Moving $filename to music directory\" mv \"$file\" \"$Result_music\" ;; *.zip|*.rar|*.tar) echo \"Moving $filename to archive directory\" mv \"$file\" \"$Result_archives\" ;; *) echo \"Something went wrong...\" esac fi done echo \"File sorting was successfully completed.\" \u043c\u043e\u0436\u0435\u0448\u044c \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u044d\u0442\u0443 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u043d\u0430 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u043c \u0442\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u043e\u043c","title":"\u041a\u043e\u0434 \u0434\u043b\u044f MacOS \u0441\u0438\u0441\u0442\u0435\u043c:"},{"location":"guide/","text":"File Auto-Sorter \ud83d\udcc1 A smart Bash script that automatically organizes your Downloads folder by sorting files into categorized folders. \ud83d\uddc2 Features \ud83d\udd0d Automatic Monitoring : Watches your Downloads directory for new files \ud83d\udcc2 Smart Categorization : Identifies file types by extension and moves them to appropriate folders \u26a1 Lightweight : Pure Bash script - no dependencies required \ud83d\udc27 Cross-Platform : Works on Linux and macOS systems \ud83d\udee0 Customizable : Easy to modify categories and file extensions \ud83d\udd04 Safe Operations : Prevents file overwrites and handles errors gracefully Supported File Types Category File Extensions Icon Images \ud83d\uddbc .jpg , .jpeg , .png , .gif , .bmp \ud83d\udcf7 Documents \ud83d\udcc4 .pdf , .doc , .docx , .txt , .rtf , .xls , .xlsx , .ppt , .pptx , .odt \ud83d\udcd1 Audio \ud83c\udfb5 .mp3 , .wav , .aac , .ogg \ud83c\udfa7 Video \ud83c\udfa5 .mp4 , .avi , .mkv , .wmv , .flv \ud83d\udcf9 Archives \ud83d\udce6 .zip , .rar , .tar \ud83d\udddc Installation Clone the repository : ```bash git clone https://github.com/JeyLogan/file-auto-sorter.git cd file-auto-sorter Make the script executable: chmod +x file_sorter.sh Usage ./file_sorter.sh","title":"Quick start"},{"location":"guide/#file-auto-sorter","text":"A smart Bash script that automatically organizes your Downloads folder by sorting files into categorized folders. \ud83d\uddc2","title":"File Auto-Sorter \ud83d\udcc1"},{"location":"guide/#features","text":"\ud83d\udd0d Automatic Monitoring : Watches your Downloads directory for new files \ud83d\udcc2 Smart Categorization : Identifies file types by extension and moves them to appropriate folders \u26a1 Lightweight : Pure Bash script - no dependencies required \ud83d\udc27 Cross-Platform : Works on Linux and macOS systems \ud83d\udee0 Customizable : Easy to modify categories and file extensions \ud83d\udd04 Safe Operations : Prevents file overwrites and handles errors gracefully","title":"Features"},{"location":"guide/#supported-file-types","text":"Category File Extensions Icon Images \ud83d\uddbc .jpg , .jpeg , .png , .gif , .bmp \ud83d\udcf7 Documents \ud83d\udcc4 .pdf , .doc , .docx , .txt , .rtf , .xls , .xlsx , .ppt , .pptx , .odt \ud83d\udcd1 Audio \ud83c\udfb5 .mp3 , .wav , .aac , .ogg \ud83c\udfa7 Video \ud83c\udfa5 .mp4 , .avi , .mkv , .wmv , .flv \ud83d\udcf9 Archives \ud83d\udce6 .zip , .rar , .tar \ud83d\udddc","title":"Supported File Types"},{"location":"guide/#installation","text":"Clone the repository : ```bash git clone https://github.com/JeyLogan/file-auto-sorter.git cd file-auto-sorter Make the script executable: chmod +x file_sorter.sh Usage ./file_sorter.sh","title":"Installation"}]}